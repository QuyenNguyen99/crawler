{"version":3,"sources":["C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.component.html","C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.component.scss","C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.component.ts","C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.module.ts","C:/project/crawlersystem/src/app/common/services/dashboard.service.ts","C:/project/crawlersystem/src/assets/js/jquery.CalendarHeatmap.min.js"],"names":[],"mappings":"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;;gBACvB,sBAAO,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,wDAAG,CAAC,iBAAiB,EAAC;wBAClC,SAAS,EAAC,SAAS;qBAC1B,CAAC,EAAC;;;KACV;IAjFY,gBAAgB;QAD5B,iEAAU,EAAE;OACA,gBAAgB,CAqF5B;IAAD,uBAAC;CAAA,CArFqC,sEAAa,GAqFlD;AArF4B;;;;;;;;ACR7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,UAAU;AACtC;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA,wBAAwB;AACxB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0EAA0E;AAC1E;;AAEA;;AAEA,oCAAoC,OAAO;;AAE3C;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA,yBAAyB;AACzB,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,aAAa;AACb;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,iCAAiC,OAAO;;AAExC;AACA;AACA;AACA;AACA,oCAAoC;AACpC;;AAEA;AACA,mDAAmD,+BAA+B;AAClF;AACA;AACA;AACA;AACA,yBAAyB;AACzB,uDAAuD,+BAA+B;AACtF;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,8CAA8C,+BAA+B;;AAE7E;AACA;AACA;;AAEA;AACA;AACA,oCAAoC,UAAU;AAC9C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB;;AAEzB;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,QAAQ;AACrC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,sBAAsB;AACtD;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA,CAAC","file":"dashboard.module.chunk.js","sourcesContent":["module.exports = \"\\r\\n<style>\\r\\n    .gray{color:gray}\\r\\n  td.red code{color: white;\\r\\n    background: #fd6060;\\r\\n    border-radius: 15px;\\r\\n    cursor: pointer;}\\r\\n  .green{color:green}\\r\\n  td pre{ color:#fd6060;font-size:10px}\\r\\n</style>\\r\\n<div class=\\\"container-fluid\\\">\\r\\n    <hr/>\\r\\n    <div class=\\\"cbs_item_row col-6-ipad cbs_style_label col-xs-12 col-lg-6\\\">\\r\\n        <!----><div class=\\\"col-5-ipad cbs_style_label col-xs-12 col-lg-5\\\">\\r\\n            <label for=\\\"jobtypeservice-name\\\" class=\\\"\\\">Số lượng bản ghi chạy mỗi request:</label>\\r\\n        </div>\\r\\n        <div class=\\\"col-7-ipad cbs_style_ip col-xs-12 col-lg-4\\\">\\r\\n            <input type=\\\"text\\\" [(ngModel)]=\\\"optionkey\\\">\\r\\n            <div class=\\\"help-block\\\"></div>\\r\\n        </div>\\r\\n        <div class=\\\"col-7-ipad cbs_style_ip col-xs-12 col-lg-3\\\">\\r\\n            <button class=\\\"cbs_btn btn_primary\\\" (click)=\\\"updateoptionkey()\\\" type=\\\"submit\\\">Cập nhật</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"container-fluid\\\" style=\\\"background:#ECEFF1\\\" id='layout_dashboard'>\\r\\n        <br/>\\r\\n        <h1>Thống kê dữ liệu</h1>\\r\\n        <br/>\\r\\n  </div>  \\r\\n  <br/>\\r\\n    <!-- <h2>Bar chart example</h2> -->\\r\\n    \\r\\n<div class=\\\"admin-table-to-form col-12-ipad cbs_style_label col-xs-12 col-lg-12\\\">\\r\\n        <hr/>\\r\\n        <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n            \\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                        <h2>Mật độ job - theo thời gian</h2>\\r\\n                        <hr>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-12\\\">\\r\\n                        <div id=\\\"heatmap-1\\\"></div>\\r\\n                    </div>\\r\\n                \\r\\n        </div>\\r\\n        <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                <fdaterangepicker [model]=\\\"jobService\\\" [labelValue]=\\\"'Chọn khoảng thời gian'\\\" [attribute]=\\\"'FINISH_TIME'\\\" (valueChanged)=\\\"changedate()\\\"></fdaterangepicker>\\r\\n                <div class=\\\"row\\\"  *ngIf=\\\"custom.data\\\">\\r\\n                        <table class=\\\"table\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>Tên API</th>\\r\\n                                    <th class=\\\"gray\\\">Chưa chạy</th>\\r\\n                                    <th class=\\\"red\\\">Lỗi</th>\\r\\n                                    <th class=\\\"green\\\">Thành công</th>\\r\\n                                    <th>Tổng số request</th>\\r\\n                                <th>%</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                            <ng-container *ngFor=\\\"let r of custom.data\\\">\\r\\n                                <tr>\\r\\n                                    <td>{{r.NAME}}</td>\\r\\n                                    <td class=\\\"gray\\\">{{r.NOT_RUNNING}}</td>\\r\\n                                    <td class=\\\"red\\\">{{r.ERROR}}</td>\\r\\n                                    <td class=\\\"green\\\">{{r.VALID}}</td>\\r\\n                                    <td>{{r.TOTAL}}</td>\\r\\n                                    <td>{{r.PERCENT}}</td>\\r\\n                                </tr>\\r\\n                            </ng-container>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n            </div>\\r\\n        \\r\\n</div>\\r\\n    <div class=\\\"admin-table-to-form col-12-ipad cbs_style_label col-xs-12 col-lg-12\\\">\\r\\n      \\r\\n      <ul class=\\\"nav nav-tabs\\\">\\r\\n            <li class=\\\"active\\\"><a data-toggle=\\\"tab\\\" href=\\\"#menu0\\\"><h4>TOÀN THỜI GIAN</h4></a></li>\\r\\n          <li><a data-toggle=\\\"tab\\\" href=\\\"#menu1\\\"><h4>HÔM NAY</h4></a></li>\\r\\n          <li><a data-toggle=\\\"tab\\\" href=\\\"#menu2\\\"><h4>THÁNG</h4></a></li>\\r\\n          <li><a data-toggle=\\\"tab\\\" href=\\\"#menu3\\\"><h4>NĂM</h4></a></li>\\r\\n        </ul>\\r\\n        \\r\\n        <div class=\\\"tab-content\\\">\\r\\n            <div id=\\\"menu0\\\" class=\\\"tab-pane fade in active\\\">\\r\\n                    <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                            <div class=\\\"row\\\"  *ngIf=\\\"result.data\\\">\\r\\n                                <table class=\\\"table\\\">\\r\\n                                    <thead>\\r\\n                                        <tr>\\r\\n                                        <th>Tên API</th>\\r\\n                                        <th class=\\\"gray\\\">Chưa chạy</th>\\r\\n                                        <th class=\\\"red\\\">Lỗi</th>\\r\\n                                        <th class=\\\"green\\\">Thành công</th>\\r\\n                                        <th>Tổng số request</th>\\r\\n                                        <th>%</th>\\r\\n                                        </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody>\\r\\n                                    <ng-container *ngFor=\\\"let r of result.data\\\">\\r\\n                                        <tr>\\r\\n                                            <td>{{r.NAME}}</td>\\r\\n                                            <td class=\\\"gray\\\">{{r.NOT_RUNNING}}</td>\\r\\n                                            <td class=\\\"red\\\" (click)=\\\"searchError('total',r.ID)\\\"><code>{{r.ERROR}}</code></td>\\r\\n                                            <td class=\\\"green\\\">{{r.VALID}}</td>\\r\\n                                            <td>{{r.TOTAL}}</td>\\r\\n                                            <td>{{r.PERCENT}}</td>\\r\\n                                        </tr>\\r\\n                                    </ng-container>\\r\\n                                    </tbody>\\r\\n                                </table>\\r\\n                            </div>\\r\\n            </div>\\r\\n            <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                    <div class=\\\"row\\\"  *ngIf=\\\"ERRORTOTAL\\\">\\r\\n                            <table class=\\\"table\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Thông tin</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody style=\\\"background: #444;\\\">\\r\\n                                <ng-container *ngFor=\\\"let ERR of ERRORTOTAL\\\">\\r\\n                                    <tr>\\r\\n                                        <td><pre>{{ERR}}</pre></td>\\r\\n                                    </tr>\\r\\n                                </ng-container>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n          <div id=\\\"menu1\\\" class=\\\"tab-pane fade\\\">\\r\\n              <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                  <div class=\\\"row\\\"  *ngIf=\\\"dailyresult.data\\\">\\r\\n                      <table class=\\\"table\\\">\\r\\n                          <thead>\\r\\n                              <tr>\\r\\n                                  <th>Tên API</th>\\r\\n                                  <th class=\\\"gray\\\">Chưa chạy</th>\\r\\n                                  <th class=\\\"red\\\">Lỗi</th>\\r\\n                                  <th class=\\\"green\\\">Thành công</th>\\r\\n                                  <th>Tổng số request</th>\\r\\n                              <th>%</th>\\r\\n                              </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                          <ng-container *ngFor=\\\"let r of dailyresult.data\\\">\\r\\n                              <tr>\\r\\n                                  <td>{{r.NAME}}</td>\\r\\n                                  <td class=\\\"gray\\\">{{r.NOT_RUNNING}}</td>\\r\\n                                  <td class=\\\"red\\\" (click)=\\\"searchError('day',r.ID)\\\"><code>{{r.ERROR}}</code></td>\\r\\n                                  <td class=\\\"green\\\">{{r.VALID}}</td>\\r\\n                                  <td>{{r.TOTAL}}</td>\\r\\n                                  <td>{{r.PERCENT}}</td>\\r\\n                              </tr>\\r\\n                          </ng-container>\\r\\n                          </tbody>\\r\\n                      </table>\\r\\n                  </div>\\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                    <div class=\\\"row\\\"  *ngIf=\\\"ERRORDAY\\\">\\r\\n                            <table class=\\\"table\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Thông tin</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody style=\\\"background: #444;\\\">\\r\\n                                <ng-container *ngFor=\\\"let ERR of ERRORDAY\\\">\\r\\n                                    <tr>\\r\\n                                        <td><pre>{{ERR}}</pre></td>\\r\\n                                    </tr>\\r\\n                                </ng-container>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          <div id=\\\"menu2\\\" class=\\\"tab-pane fade\\\">\\r\\n            <!-- <h2>Bar chart example</h2> -->\\r\\n            <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                <div class=\\\"row\\\"  *ngIf=\\\"monthlyresult.data\\\">\\r\\n                    <table class=\\\"table\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Tên API</th>\\r\\n                                <th class=\\\"gray\\\">Chưa chạy</th>\\r\\n                                <th class=\\\"red\\\">Lỗi</th>\\r\\n                                <th class=\\\"green\\\">Thành công</th>\\r\\n                                <th>Tổng số request</th>\\r\\n                            <th>%</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                        <ng-container *ngFor=\\\"let r of monthlyresult.data\\\">\\r\\n                            <tr>\\r\\n                                <td>{{r.NAME}}</td>\\r\\n                                <td class=\\\"gray\\\">{{r.NOT_RUNNING}}</td>\\r\\n                                <td class=\\\"red\\\" (click)=\\\"searchError('month',r.ID)\\\"><code>{{r.ERROR}}</code></td>\\r\\n                                <td class=\\\"green\\\">{{r.VALID}}</td>\\r\\n                                <td>{{r.TOTAL}}</td>\\r\\n                                <td>{{r.PERCENT}}</td>\\r\\n                            </tr>\\r\\n                        </ng-container>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                  <div class=\\\"row\\\"  *ngIf=\\\"ERRORMONTH\\\">\\r\\n                          <table class=\\\"table\\\">\\r\\n                              <thead>\\r\\n                                  <tr>\\r\\n                                      <th>Thông tin</th>\\r\\n                                  </tr>\\r\\n                              </thead>\\r\\n                              <tbody style=\\\"background: #444;\\\">\\r\\n                              <ng-container *ngFor=\\\"let ERR of ERRORMONTH\\\">\\r\\n                                  <tr>\\r\\n                                      <td><pre>{{ERR}}</pre></td>\\r\\n                                  </tr>\\r\\n                              </ng-container>\\r\\n                              </tbody>\\r\\n                          </table>\\r\\n                      </div>\\r\\n            </div>\\r\\n              \\r\\n          </div>\\r\\n          <div id=\\\"menu3\\\" class=\\\"tab-pane fade\\\">\\r\\n              <!-- <h2>Bar chart example</h2> -->\\r\\n              <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                  <div class=\\\"row\\\"  *ngIf=\\\"yearlyresult.data\\\">\\r\\n                      <table class=\\\"table\\\">\\r\\n                          <thead>\\r\\n                              <tr>\\r\\n                                  <th>Tên API</th>\\r\\n                                  <th class=\\\"gray\\\">Chưa chạy</th>\\r\\n                                  <th class=\\\"red\\\">Lỗi</th>\\r\\n                                  <th class=\\\"green\\\">Thành công</th>\\r\\n                                  <th>Tổng số request</th>\\r\\n                              <th>%</th>\\r\\n                              </tr>\\r\\n                          </thead>\\r\\n                          <tbody>\\r\\n                          <ng-container *ngFor=\\\"let r of yearlyresult.data\\\">\\r\\n                              <tr>\\r\\n                                  <td>{{r.NAME}}</td>\\r\\n                                  <td class=\\\"gray\\\">{{r.NOT_RUNNING}}</td>\\r\\n                                  <td class=\\\"red\\\" (click)=\\\"searchError('year',r.ID)\\\"><code>{{r.ERROR}}</code></td>\\r\\n                                  <td class=\\\"green\\\">{{r.VALID}}</td>\\r\\n                                  <td>{{r.TOTAL}}</td>\\r\\n                                  <td>{{r.PERCENT}}</td>\\r\\n                              </tr>\\r\\n                          </ng-container>\\r\\n                          </tbody>\\r\\n                      </table>\\r\\n                  </div>\\r\\n              </div>\\r\\n              <div class=\\\"admin-table-to-form col-6-ipad cbs_style_label col-xs-6 col-lg-6\\\">\\r\\n                    <div class=\\\"row\\\"  *ngIf=\\\"ERRORYEAR\\\">\\r\\n                            <table class=\\\"table\\\">\\r\\n                                <thead>\\r\\n                                    <tr>\\r\\n                                        <th>Thông tin</th>\\r\\n                                    </tr>\\r\\n                                </thead>\\r\\n                                <tbody style=\\\"background: #444;\\\">\\r\\n                                <ng-container *ngFor=\\\"let ERR of ERRORYEAR\\\">\\r\\n                                    <tr>\\r\\n                                        <td><pre>{{ERR}}</pre></td>\\r\\n                                    </tr>\\r\\n                                </ng-container>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n                        </div>\\r\\n              </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/application/admin/dashboard/dashboard.component.html\n// module chunks = dashboard.module","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"body {\\n  font-family: 'Open Sans', sans-serif; }\\n\\ndiv#layout {\\n  text-align: center; }\\n\\ndiv#container {\\n  width: 1000px;\\n  height: 600px;\\n  margin: auto;\\n  background-color: #2F4A6D; }\\n\\nsvg {\\n  width: 100%;\\n  height: 100%; }\\n\\n.bar {\\n  fill: #80cbc4; }\\n\\ntext {\\n  font-size: 12px;\\n  fill: #fff; }\\n\\npath {\\n  stroke: gray; }\\n\\nline {\\n  stroke: gray; }\\n\\nline#limit {\\n  stroke: #FED966;\\n  stroke-width: 3;\\n  stroke-dasharray: 3 6; }\\n\\n.grid path {\\n  stroke-width: 0; }\\n\\n.grid .tick line {\\n  stroke: #9FAAAE;\\n  stroke-opacity: 0.3; }\\n\\ntext.divergence {\\n  font-size: 14px;\\n  fill: #2F4A6D; }\\n\\ntext.value {\\n  font-size: 14px; }\\n\\ntext.title {\\n  font-size: 22px;\\n  font-weight: 600; }\\n\\ntext.label {\\n  font-size: 14px;\\n  font-weight: 400; }\\n\\ntext.source {\\n  font-size: 10px; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.component.scss\n// module id = ../../../../../src/app/application/admin/dashboard/dashboard.component.scss\n// module chunks = dashboard.module","import { Component, ViewEncapsulation, AfterViewInit, Input, OnInit, OnDestroy, ViewChild, HostListener } from '@angular/core';\r\nimport { ActivatedRoute, Router, UrlSegment, UrlTree, PRIMARY_OUTLET, UrlSegmentGroup } from '@angular/router';\r\n\r\n\r\nimport { UserService } from 'app/common/services/user.service';\r\nimport { DashboardService } from 'app/common/services/dashboard.service';\r\nimport { JobService } from '../models/job.service';\r\nimport { NotificationsService } from 'angular4-notifications/src/notifications.service';\r\nimport { AdminOtherComponent } from 'app/application/admin/settings-build/admin/admin.other/admin.other.component';\r\nimport { AdminFormFieldService } from 'app/common/services/admin_form_field.service';\r\nimport { AdminFormService } from 'app/common/services/admin_form.service';\r\nimport { AdminFormTabService } from 'app/common/services/admin_form_tab.service';\r\nimport { GlobalFunction } from 'app/common/core/global_function';\r\ndeclare var $: any;\r\nimport 'assets/js/jquery.CalendarHeatmap.min';\r\n\r\n@Component({\r\n    selector: 'dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss']\r\n})\r\n\r\nexport class DashboardComponent {\r\n    \r\n    result: any = {};\r\n    dailyresult: any = {};\r\n    monthlyresult: any = {};\r\n    yearlyresult: any = {};\r\n    custom: any = {};\r\n    ERRORDAY:  any = [];\r\n    ERRORMONTH:  any = [];\r\n    ERRORYEAR:  any = [];\r\n    ERRORTOTAL:  any = [];\r\n    admin_form: AdminFormService;\r\n    admin_form_tab: AdminFormTabService;\r\n    admin_form_field: AdminFormFieldService;\r\n    jobService: any;\r\n    dashboardservice: any;\r\n  changeFilterModeWidth: number = 480;\r\n  isMobile = false;\r\n  optionkey: number = 0;\r\n\r\n    constructor(private route3: ActivatedRoute, private router3: Router, public user_service: UserService, public notification_service3: NotificationsService) {\r\n            \r\n    }\r\n    \r\n    async ngOnInit() {\r\n      this.reload_admin_table();\r\n    }\r\n\r\n    async reload_admin_table() {\r\n        this.dashboardservice = new DashboardService(this.user_service._db, this.user_service.http);\r\n        this.jobService = new JobService(this.user_service._db, this.user_service.http);\r\n        this.dashboardservice.getTotalResult().then(r => {\r\n          this.result = r;\r\n        })\r\n        this.dashboardservice.getTotalDailyResult().then(r => {\r\n          this.dailyresult = r;\r\n        });\r\n        this.dashboardservice.getTotalMonthlyResult().then(r => {\r\n          this.monthlyresult = r;\r\n        })\r\n        this.dashboardservice.getTotalYearlyResult().then(r => {\r\n          this.yearlyresult = r;\r\n        })\r\n        this.dashboardservice.getOptionKey().then(r => {\r\n          this.optionkey = r.data;\r\n        });\r\n        this.heatmap();\r\n\r\n    }\r\n\r\n    async changedate(){\r\n      var dates = this.jobService.FINISH_TIME.split(\" - \");\r\n      var from = dates[0].split(\"-\");\r\n      var to = dates[1].split(\"-\");\r\n      var start = from[1]+\"/\"+from[0]+\"/\"+from[2];\r\n      var end = to[1]+\"/\"+to[0]+\"/\"+to[2];\r\n      this.custom = await this.dashboardservice.getTotalFromDateToDateResult(start,end);\r\n    }\r\n\r\n    async heatmap(){\r\n      var x = await this.dashboardservice.getHeatchartdata();\r\n      var data = [];\r\n      for(var dat of x.data)\r\n      {\r\n        data.push({\r\n          count: dat.CNT,\r\n          date: dat.FILTER_DATE\r\n        });\r\n      }\r\n      $(\"#heatmap-1\").CalendarHeatmap(data, {\r\n        labels: {\r\n          custom: {\r\n            monthLabels: \"MMM 'YY\"\r\n          }\r\n        },\r\n        tooltips:{\r\n          show: true\r\n        }\r\n      });\r\n      var that = this;\r\n      $(\".ch-day\").on(\"click\",async function(){\r\n        var date_ = $(this).attr(\"date_\").split(\"-\");\r\n        var dat = date_[1]+\"/\"+date_[2]+\"/\"+date_[0];\r\n        that.custom = await that.dashboardservice.getTotalExactlyDate(dat);\r\n      })\r\n    }\r\n\r\n    async searchError(type,typeid){\r\n      this.ERRORYEAR = [];\r\n      this.ERRORMONTH = [];\r\n      this.ERRORDAY = [];\r\n      this.ERRORTOTAL = [];\r\n      if(type=='total')\r\n      {\r\n        var total = await this.dashboardservice.getErrorTotallyResult(typeid);\r\n        for(var t of total.data)\r\n        {\r\n          this.ERRORTOTAL.push(JSON.stringify(t,null,2));\r\n        }\r\n      }\r\n      else if(type=='year')\r\n      {\r\n        var year = await this.dashboardservice.getErrorYearlyResult(typeid);\r\n        for(var y of year.data)\r\n        {\r\n          this.ERRORYEAR.push(JSON.stringify(y,null,2));\r\n        }\r\n      }\r\n      else if(type=='month')\r\n      {\r\n        var month = await this.dashboardservice.getErrorMonthlyResult(typeid);\r\n        for(var m of month.data)\r\n        {\r\n          this.ERRORMONTH.push(JSON.stringify(m,null,2));\r\n        }\r\n      }\r\n      else if(type=='day')\r\n      {\r\n        var day = await this.dashboardservice.getErrorDailyResult(typeid);\r\n        for(var d of day.data)\r\n        {\r\n          this.ERRORDAY.push(JSON.stringify(d,null,2));\r\n        }\r\n      }\r\n    }\r\n\r\n    async updateoptionkey(){\r\n      var rs = await this.dashboardservice.updateOptionKey(this.optionkey);\r\n      if(rs.code != 200)\r\n      {\r\n        this.optionkey = (await this.dashboardservice.getOptionKey()).data;\r\n        this.notification_service3.error('Cập nhật thất bại','');\r\n      }\r\n      else\r\n      {\r\n        this.notification_service3.success('Cập nhật thành công','');\r\n      }\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { SimpleNotificationsModule, NotificationsService } from 'angular4-notifications';\r\nimport { LoadingModule } from 'ngx-loading';\r\n\r\nimport { ComboBoxComponent } from 'ng2-combobox';\r\n\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { TableComponent } from '../../../common/component/table/table.component';\r\nimport { TableModule } from '../../../common/component/table/table.module';\r\nimport { PopupModule } from 'app/common/component/popup/popup.module';\r\nimport { FieldAdminModule } from 'app/application/admin/fields/fields.module';\r\nimport { UserService } from 'app/common/services/user.service';\r\nimport { CommonpageModule } from 'app/application/admin/settings-build/common.page.module';\r\nimport { filterusernameModule } from 'app/application/admin/settings-build/admin/filterusername/filterusername.module';\r\nimport { SelectupdateModule } from 'app/common/component/selectupdate/selectupdate.module';\r\nimport { MultiselectModule } from 'app/common/component/multiselect/multiselect.module';\r\nimport { TooltipsModule } from 'app/common/component/tooltip/tooltip.module';\r\nimport { DateTimePickerModule } from 'ng-pick-datetime';\r\nimport { DashboardService } from 'app/common/services/dashboard.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    HttpModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CommonModule,\r\n    FieldAdminModule,\r\n    TooltipsModule,\r\n    PopupModule,\r\n    CommonpageModule,\r\n    filterusernameModule,\r\n    SelectupdateModule,\r\n    MultiselectModule,\r\n    LoadingModule,\r\n    DateTimePickerModule,\r\n    SimpleNotificationsModule.forRoot(),\r\n    RouterModule.forChild([\r\n      {\r\n          path: '',\r\n          component: DashboardComponent\r\n      },\r\n      {\r\n          path: 'index',\r\n          component: DashboardComponent\r\n      },\r\n    ]),\r\n    TableModule,\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n  ],\r\n  providers: [NotificationsService, UserService ],\r\n})\r\n\r\nexport class DashboardModule { }\n\n\n// WEBPACK FOOTER //\n// C:/project/crawlersystem/src/app/application/admin/dashboard/dashboard.module.ts","import { ServiceGlobal } from './service.global';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport { API } from '../../config/api';\r\nimport { GlobalFunction } from '../core/global_function';\r\n\r\n\r\n@Injectable()\r\nexport class DashboardService extends ServiceGlobal {\r\n    data: any;\r\n    fk_table_data: any;\r\n    dbname() {\r\n        return 'crawlersystem';\r\n    }\r\n    loading: any = false;\r\n    tableName() { return 'dashboard'; }\r\n\r\n    attributeLabels() {\r\n        return Object.assign(super.attributeLabels(), {\r\n            \"data\": \"data\",\r\n            \"fk_table_data\": \"fk_table_data\"\r\n        });\r\n    }\r\n\r\n    async getTotalResult() {\r\n            return this._db.get(API.JOB_TOTAL_RESULT);\r\n    }\r\n\r\n    async getTotalDailyResult() {\r\n            return this._db.get(API.JOB_DAILY_RESULT);\r\n    }\r\n\r\n    async getTotalMonthlyResult() {\r\n            return this._db.get(API.JOB_MONTHLY_RESULT);\r\n    }\r\n\r\n    async getTotalYearlyResult() {\r\n            return this._db.get(API.JOB_YEARLY_RESULT);\r\n    }\r\n\r\n    async getErrorYearlyResult(id) {\r\n        return this._db.get(API.JOB_ERROR_YEARLY,{\r\n                typeid:id\r\n        });\r\n        }\r\n\r\n        async getErrorMonthlyResult(id) {\r\n                return this._db.get(API.JOB_ERROR_MONTHLY,{\r\n                        typeid:id\r\n                });\r\n        }\r\n\r\n        async getErrorDailyResult(id) {\r\n            return this._db.get(API.JOB_ERROR_DAILY,{\r\n                    typeid:id\r\n            });\r\n            }\r\n\r\n            async getErrorTotallyResult(id) {\r\n                return this._db.get(API.JOB_ERROR_TOTALLY,{\r\n                        typeid:id\r\n                });\r\n        }\r\n\r\n    async getTotalFromDateToDateResult(st,en) {\r\n            return this._db.get(API.JOB_FROM_DATE_TO_DATE_RESULT,{\r\n                    start:st,\r\n                    end:en\r\n            });\r\n    }\r\n\r\n    async getHeatchartdata() {\r\n        return this._db.get(API.JOB_HEAT_CHART_DATA);\r\n}\r\n\r\nasync getTotalExactlyDate(dat) {\r\n    return this._db.get(API.JOB_EXACTLY_DATE,{\r\n        data:dat\r\n});\r\n}\r\n\r\nasync getOptionKey() {\r\n        return this._db.get(API.OPTION_KEY);\r\n}\r\n\r\nasync updateOptionKey(optionkey) {\r\n        return this._db.get(API.UPDATE_OPTION_KEY,{\r\n                optionkey:optionkey\r\n        });\r\n}\r\n\r\n\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// C:/project/crawlersystem/src/app/common/services/dashboard.service.ts","/*\r\n *  calendarheatmap - v0.0.3\r\n *  A simple Calendar Heatmap for jQuery.\r\n *  https://github.com/SeBassTian23/CalendarHeatmap\r\n *\r\n *  Made by Sebastian Kuhlgert\r\n *  Under MIT License\r\n */\r\n;( function( $, window, document, undefined ) {\r\n\r\n    \"use strict\";\r\n\r\n        // Default Options\r\n        var pluginName = \"CalendarHeatmap\",\r\n            defaults = {\r\n                title: null,\r\n                months: 12,\r\n                weekStartDay: 1,\r\n                lastMonth: moment().month() + 1,\r\n                lastYear: moment().year(),\r\n                coloring: null,\r\n                labels: {\r\n                    days: false,\r\n                    months: true,\r\n                    custom: {\r\n                        weekDayLabels: null,\r\n                        monthLabels: null\r\n                    }\r\n                },\r\n                legend: {\r\n                    show: true,\r\n                    align: \"right\",\r\n                    minLabel: \"Less\",\r\n                    maxLabel: \"More\"\r\n                },\r\n                tooltips: {\r\n                    show: false,\r\n                    options: {}\r\n                }\r\n            };\r\n\r\n        // The actual plugin constructor\r\n        function Plugin ( element, data, options ) {\r\n            this.element = element;\r\n            this.data = data;\r\n            this.settings = $.extend( true, {}, defaults, options );\r\n            this._defaults = defaults;\r\n            this._name = pluginName;\r\n            this.init();\r\n        }\r\n\r\n        // Avoid Plugin.prototype conflicts\r\n        $.extend( Plugin.prototype, {\r\n            init: function() {\r\n\r\n                // Run Calandar Heatmap Function\r\n                this.calendarHeatmap();\r\n\r\n                // Check if the moment.js library is available.\r\n                if ( !moment ) {\r\n                    console.log( \"The calendar heatmap plugin requires moment.js\" );\r\n                }\r\n            },\r\n            parse: function() {\r\n\r\n                var type = $.type( this.data );\r\n                if ( [ \"array\", \"object\" ].indexOf( type ) === -1 ) {\r\n                    console.log( \"Invalid data source\" );\r\n                    return null;\r\n                } else {\r\n                    if ( type === \"array\" && this.data.length > 0 ) {\r\n                        var arrtype = $.type( this.data[ 0 ] );\r\n                        if ( arrtype === \"object\" ) {\r\n                            if ( this.data[ 0 ].date && this.data[ 0 ].count ) {\r\n                                return this.data.slice( 0 );\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        } else if ( [ \"string\", \"date\" ].indexOf( arrtype ) > -1 ) {\r\n                            if ( moment( this.data[ 0 ] ).isValid() ) {\r\n                                var obj = {};\r\n                                for ( var i in this.data ) {\r\n                                    var d = moment( this.data[ i ] ).format( \"YYYY-MM-DD\" );\r\n                                    if ( !obj[ d ] ) {\r\n                                        obj[ d ] = 1;\r\n                                    } else {\r\n                                        obj[ d ] += 1;\r\n                                    }\r\n                                }\r\n                                var arr = [];\r\n                                for ( var j in obj ) {\r\n                                    arr.push( {\r\n                                        \"count\": obj[ j ],\r\n                                        \"date\": j\r\n                                    } );\r\n                                }\r\n                                return arr;\r\n                            } else {\r\n                                return null;\r\n                            }\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    } else if ( type === \"array\" && this.data.length === 0 ) {\r\n                        return [];\r\n                    } else if ( type === \"object\" && !Object.empty( this.data ) ) {\r\n                        var keys = Object.keys( this.data );\r\n                        if ( moment( keys[ 0 ] ).isValid() ) {\r\n                            if ( $.type( this.data[ keys[ 0 ] ] ) === \"number\" ) {\r\n                                var data = [];\r\n                                for ( var k in this.data ) {\r\n                                    data.push( {\r\n                                        \"count\": this.data[ k ],\r\n                                        \"date\": moment( k ).format( \"YYYY-MM-DD\" )\r\n                                    } );\r\n                                }\r\n                                return data;\r\n                            }\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                }\r\n            },\r\n            index: function( data ) {\r\n                this.idx = {};\r\n                for ( var i in data ) {\r\n                    this.idx[ data[ i ].date ] = i;\r\n                }\r\n            },\r\n            pad: function( str, max ) {\r\n                str = String( str );\r\n                return str.length < max ? this.pad( \"0\" + str, max ) : str;\r\n            },\r\n            calculateBins: function( events ) {\r\n\r\n                // Calculate bins for events\r\n                var arr = [];\r\n                var i;\r\n                var bins = this.settings.steps || 4;\r\n                var binlabels = [ \"0\" ];\r\n                var binlabelrange = [ [ 0, 0 ] ];\r\n                for ( i in events ) {\r\n                    events[ i ].count = parseInt( events[ i ].count );\r\n                    arr.push( events[ i ].count );\r\n                }\r\n                var firstStep = Math.min.apply( Math, arr );\r\n                var maxCount = Math.max.apply( Math, arr );\r\n                var stepWidth = ( maxCount - firstStep ) / bins;\r\n\r\n                if ( stepWidth === 0 ) {\r\n                    stepWidth = maxCount / bins;\r\n                    if ( stepWidth < 1 ) {\r\n                        stepWidth = 1;\r\n                    }\r\n                }\r\n\r\n                // Generate bin labels\r\n                for ( i = 0; i < bins; i++ ) {\r\n                    if ( !isFinite( firstStep ) ) {\r\n                        binlabels.push( \"\" );\r\n                        binlabelrange.push( [ null, null ] );\r\n                    } else if ( maxCount < bins ) {\r\n                        if ( ( i - ( bins - maxCount ) ) >= 0 ) {\r\n                            binlabels.push( String( 1 + ( i - ( bins - maxCount ) ) ) );\r\n                            binlabelrange.push( [\r\n                                ( 1 + ( i - ( bins - maxCount ) ) ),\r\n                                ( 1 + ( i - ( bins - maxCount ) ) )\r\n                            ] );\r\n                        } else {\r\n                            binlabels.push( \"\" );\r\n                            binlabelrange.push( [ null, null ] );\r\n                        }\r\n                    } else if ( maxCount === bins ) {\r\n                        binlabels.push( String( ( i + 1 ) ) );\r\n                        binlabelrange.push( [ ( i + 1 ), ( i + 1 ) ] );\r\n                    } else if ( ( maxCount - 2 ) === bins ) {\r\n                        if ( ( i + 1 ) === bins ) {\r\n                            binlabels.push( String( ( i + 1 ) ) + \"+\" );\r\n                            binlabelrange.push( [ ( i + 1 ), null ] );\r\n                        } else {\r\n                            binlabels.push( String( ( i + 1 ) ) );\r\n                            binlabelrange.push( [ ( i + 1 ), ( i + 1 ) ] );\r\n                        }\r\n                    } else {\r\n                        var l = Math.round( i * stepWidth ) + 1;\r\n                        var ll = Math.round( i * stepWidth + stepWidth );\r\n                        binlabelrange.push( [ l, ll ] );\r\n                        if ( i === ( bins - 1 ) ) {\r\n                            l += \"+\";\r\n                        } else {\r\n                            if ( l !== ll ) {\r\n                                l += \" to \";\r\n                                l += ll;\r\n                            }\r\n                        }\r\n                        binlabels.push( String( l ) );\r\n                    }\r\n                }\r\n\r\n                // Assign bins to counts\r\n                for ( i in events ) {\r\n\r\n                    if ( events[ i ].count === 0 ) {\r\n                        events[ i ].level = 0;\r\n                    } else if ( events[ i ].count - firstStep === 0 ) {\r\n                        events[ i ].level = 1;\r\n                    } else if ( !isFinite( firstStep ) ) {\r\n                        events[ i ].level = bins;\r\n                    } else {\r\n                        events[ i ].level = this.matchBin( binlabelrange, events[ i ].count );\r\n                    }\r\n                }\r\n\r\n                return { events: events, bins: binlabels };\r\n            },\r\n            matchBin: function( range, value ) {\r\n                var overlap = -1;\r\n                for ( var r in range ) {\r\n                    if ( value >= range[ r ][ 0 ] && value <= range[ r ][ 1 ] ) {\r\n                        return r;\r\n                    }\r\n                    else if(value > range[ r ][ 1 ])\r\n                    {\r\n                        overlap = r;\r\n                    }\r\n                }\r\n                if(overlap!=-1)\r\n                {\r\n                    return overlap;\r\n                }\r\n                return 0;\r\n            },\r\n            matchDate: function( obj, key ) {\r\n\r\n                if ( this.idx[ key ] ) {\r\n                    return obj[ this.idx[ key ] ];\r\n                } else {\r\n                    return null;\r\n                }\r\n            },\r\n            addWeekColumn: function( ) {\r\n                if ( this.settings.labels.days ) {\r\n                    $( \".ch-year\", this.element )\r\n                        .append( \"<div class=\\\"ch-week-labels\\\"></div>\" );\r\n\r\n                    $( \".ch-week-labels\", this.element )\r\n                        .append( \"<div class=\\\"ch-week-label-col\\\"></div>\" );\r\n\r\n                    $( \".ch-week-label-col\", this.element )\r\n                        .append( \"<div class=\\\"ch-day-labels\\\"></div>\" );\r\n\r\n                    // If month labels are displayed a placeholder needs to be added\r\n                    if ( this.settings.labels.months ) {\r\n                        $( \".ch-week-labels\", this.element )\r\n                            .append( \"<div class=\\\"ch-month-label\\\">&nbsp;</div>\" );\r\n                    }\r\n\r\n                    var swd = this.settings.weekStartDay || 1;\r\n\r\n                    for ( var i = 0; i < 7; i++ ) {\r\n\r\n                        var dayName = moment().weekday( ( i + swd ) ).format( \"ddd\" );\r\n                        var dayNumber = moment().weekday( ( i + swd ) ).format( \"d\" );\r\n                        if ( ( i - 1 ) % 2 ) {\r\n                            var wdl = this.settings.labels.custom.weekDayLabels;\r\n                            if ( $.type( wdl ) === \"array\" ) {\r\n                                dayName = wdl[ dayNumber ] || \"\";\r\n                            } else if ( $.type( wdl ) === \"string\" ) {\r\n                                dayName = moment().weekday( ( i + swd ) )\r\n                                .format( wdl );\r\n                            }\r\n                        } else {\r\n                            dayName = \"&nbsp;\";\r\n                        }\r\n                        $( \"<div>\", {\r\n                            class: \"ch-day-label\",\r\n                            html: dayName\r\n                        } )\r\n                        .appendTo( $( \".ch-day-labels\", this.element ) );\r\n                    }\r\n                }\r\n            },\r\n            calendarHeatmap: function( ) {\r\n\r\n                var data = this.parse();\r\n\r\n                if ( $.type( data ) !== \"array\" ) {\r\n                    return;\r\n                }\r\n\r\n                // Generate lookup index\r\n                this.index( data );\r\n\r\n                var calc = this.calculateBins( data );\r\n                var events = calc.events;\r\n                var binLabels = calc.bins;\r\n                var currMonth = this.settings.lastMonth;\r\n                var currYear = this.settings.lastYear;\r\n                var months = this.settings.months;\r\n                var i;\r\n\r\n                // Start day of the week\r\n                var swd = this.settings.weekStartDay || 1;\r\n\r\n                // Empty container first\r\n                $( this.element ).empty();\r\n\r\n                // Add a title to the container if not null\r\n                if ( this.settings.title ) {\r\n                    $( \"<h3>\", {\r\n                        class: \"ch-title\",\r\n                        html: this.settings.title\r\n                    } ).appendTo( $( this.element ) );\r\n                }\r\n\r\n                // Add the main container for the year\r\n                $( this.element ).addClass( \"ch\" )\r\n                    .append( \"<div class=\\\"ch-year\\\"></div>\" );\r\n\r\n                // Add labels\r\n                this.addWeekColumn();\r\n\r\n                // Start building the months\r\n                for ( i = months; i > 0; i-- ) {\r\n\r\n                    var month = currMonth - i;\r\n                    var year = currYear;\r\n                    if ( month < 0 ) {\r\n                        year -= 1;\r\n                        month += 12; // TODO: FIX for more than one year\r\n                    }\r\n\r\n                    // Build Month\r\n                    var monthName = moment().set( { \"month\": month, \"year\": year } )\r\n                    .format( \"MMM\" );\r\n                    if ( this.settings.labels.custom.monthLabels ) {\r\n                        if ( $.type( this.settings.labels.custom.monthLabels ) === \"array\" ) {\r\n                            monthName = this.settings.labels.custom.monthLabels[ month ] || \"\";\r\n                        }else {\r\n                            monthName = moment().set( { \"month\": month, \"year\": year } )\r\n                                .format( this.settings.labels.custom.monthLabels );\r\n                        }\r\n                    }\r\n                    $( \".ch-year\", this.element )\r\n                        .append( \"<div class=\\\"ch-month\\\"></div>\" );\r\n\r\n                    $( \".ch-month:last\", this.element )\r\n                        .append( \"<div class=\\\"ch-weeks\\\"></div>\" );\r\n\r\n                    if ( this.settings.labels.months ) {\r\n                        $( \".ch-month:last\", this.element )\r\n                        .append( \"<div class=\\\"ch-month-label\\\">\" + monthName + \"</div>\" );\r\n                    }\r\n\r\n                    // Get the number of days for the month\r\n                    var days = moment().set( { \"month\": month, \"year\": year } ).daysInMonth();\r\n\r\n                    // Add the first week\r\n                    $( \".ch-month:last .ch-weeks\", this.element )\r\n                        .append( \"<div class=\\\"ch-week\\\"></div>\" );\r\n\r\n                    // Week day counter\r\n                    var wc = 0;\r\n                    for ( var j = 0; j < days; j++ ) {\r\n                        var str = year + \"-\" + this.pad( ( month + 1 ), 2 );\r\n                        str += \"-\" + this.pad( ( j + 1 ), 2 );\r\n                        var obj = this.matchDate( events, str );\r\n\r\n                        if ( obj ) {\r\n                            var title = obj.count + \" on \";\r\n                            title += moment( obj.date ).format( \"ll\" );\r\n\r\n                            var color = \"\";\r\n\r\n                            if ( this.settings.coloring ) {\r\n                                color = \" \" + this.settings.coloring + \"-\" + obj.level;\r\n                            }\r\n\r\n                            $( \"<div/>\", {\r\n                                \"class\": \"ch-day lvl-\" + obj.level + color,\r\n                                \"title\": title,\r\n                                \"date_\": obj.date,\r\n                                \"data-toggle\": \"tooltip\"\r\n                            } ).appendTo(\r\n                                $( \".ch-month:last .ch-weeks .ch-week:last\", this.element )\r\n                            );\r\n\r\n                        } else {\r\n                            $( \"<div/>\", {\r\n                                \"class\": \"ch-day\"\r\n                            } ).appendTo(\r\n                                $( \".ch-month:last .ch-weeks .ch-week:last\", this.element )\r\n                            );\r\n                        }\r\n\r\n                        // Get the iso week day to see if a new week has started\r\n                        var wd = moment().set( {\r\n                            \"date\": ( j + 2 ),\r\n                            \"month\": month,\r\n                            \"year\": year\r\n                        } ).isoWeekday();\r\n\r\n                        // Incrementing the day counter for the week\r\n                        wc++;\r\n\r\n                        if ( wd === swd  && ( days - 1 ) > j ) {\r\n\r\n                            $( \".ch-month:last .ch-weeks\", this.element )\r\n                                .append( \"<div class=\\\"ch-week\\\">\" + j + \"</div>\" );\r\n\r\n                            // Reset the week day counter\r\n                            wc = 0;\r\n                        }\r\n                    }\r\n\r\n                    // Now fill up the last week with blank days\r\n                    for ( wc; wc < 7; wc++ ) {\r\n                        $( \".ch-month:last .ch-weeks .ch-week:last\", this.element )\r\n                            .append( \"<div class=\\\"ch-day is-outside-month\\\"></div>\" );\r\n                    }\r\n                }\r\n\r\n                // Add a legend\r\n                if ( this.settings.legend.show ) {\r\n\r\n                    // Add the legend container\r\n                    $( \"<div>\", {\r\n                        class: \"ch-legend\"\r\n                    } )\r\n                    .appendTo( this.element )\r\n                    .append( \"<small>\" + ( this.settings.legend.minLabel || \"\" ) + \"</small>\" )\r\n                    .append( \"<ul class=\\\"ch-lvls\\\"></ul>\" )\r\n                    .append( \"<small>\" + ( this.settings.legend.maxLabel || \"\" ) + \"</small>\" );\r\n\r\n                    if ( this.settings.legend.align === \"left\" ) {\r\n                        $( \".ch-legend\", this.element ).addClass( \"ch-legend-left\" );\r\n                    }\r\n\r\n                    if ( this.settings.legend.align === \"center\" ) {\r\n                        $( \".ch-legend\", this.element ).addClass( \"ch-legend-center\" );\r\n                    }\r\n\r\n                    // Add the legend steps\r\n                    for ( i = 0; i < binLabels.length; i++ ) {\r\n                        $( \"<li>\", {\r\n                            \"class\": \"ch-lvl lvl-\" + i,\r\n                            \"title\": binLabels[ i ],\r\n                            \"data-toggle\": \"tooltip\"\r\n                        } )\r\n                        .appendTo( $( \".ch-lvls\", this.element ) );\r\n                        if ( this.settings.coloring ) {\r\n                            $( \".ch-lvls li:last\", this.element  )\r\n                            .addClass( this.settings.coloring + \"-\" + i );\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Add tooltips to days and steps\r\n                if ( this.settings.tooltips.show && typeof $.fn.tooltip === \"function\" ) {\r\n                    $( \"[data-toggle=\\\"tooltip\\\"]\", this.element )\r\n                    .tooltip( this.settings.tooltips.options );\r\n                }\r\n            }\r\n        } );\r\n\r\n        // A really lightweight plugin wrapper around the constructor,\r\n        // preventing against multiple instantiations\r\n        $.fn[ pluginName ] = function( data, options ) {\r\n            return this.each( function() {\r\n                if ( !$.data( this, \"plugin_\" + pluginName ) ) {\r\n                    $.data( this, \"plugin_\" +\r\n                        pluginName, new Plugin( this, data, options ) );\r\n                }\r\n            } );\r\n        };\r\n\r\n} )( jQuery, window, document );\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/project/crawlersystem/src/assets/js/jquery.CalendarHeatmap.min.js\n// module id = ../../../../../src/assets/js/jquery.CalendarHeatmap.min.js\n// module chunks = dashboard.module"],"sourceRoot":"webpack:///"}