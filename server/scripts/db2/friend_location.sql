/*
CREATE TABLE "F9_APP_INSIGHT"."FRIEND_LOCATION"  (
    "FACEBOOK_ID" VARCHAR(15 OCTETS) NOT NULL , 
    "LOCATION_ID" INTEGER NOT NULL, 
    "TOTAL_SIZES" INTEGER, 
    "TOTAL_LINKS" INTEGER)   
   COMPRESS YES STATIC  
   DISTRIBUTE BY HASH("FACEBOOK_ID", "LOCATION_ID")   
     IN "USERSPACE1"  
   ORGANIZE BY ROW  ;
ALTER TABLE "F9_APP_INSIGHT"."FRIEND_LOCATION" ADD PRIMARY KEY ("FACEBOOK_ID", "LOCATION_ID") ENFORCED ;
CREATE INDEX FRIEND_LOCATION_LOCATION_ID_IDX ON F9_APP_INSIGHT.FRIEND_LOCATION (LOCATION_ID);
CREATE INDEX FRIEND_LOCATION_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.FRIEND_LOCATION (FACEBOOK_ID);
CREATE INDEX FRIEND_LOCATION_TOTAL_SIZES_IDX ON F9_APP_INSIGHT.FRIEND_LOCATION (TOTAL_SIZES);
*/

/*
CREATE TABLE "F9_APP_INSIGHT"."USER_LOCATION_ALL"  (
    "FACEBOOK_ID" VARCHAR(15 OCTETS) NOT NULL , 
    "LOCATION_ID" INTEGER NOT NULL, 
    "LOCATION_NAME" VARCHAR(1000 OCTETS), 
    "TOWN_ID" INTEGER, 
    "TOWN_NAME" VARCHAR(1000 OCTETS), 
    "DOMAIN_ID" INTEGER, 
    "DOMAIN_NAME" VARCHAR(1000 OCTETS))   
   COMPRESS YES STATIC  
   DISTRIBUTE BY HASH("FACEBOOK_ID")   
     IN "USERSPACE1"  
   ORGANIZE BY ROW  ;
ALTER TABLE "F9_APP_INSIGHT"."USER_LOCATION_ALL" ADD PRIMARY KEY ("FACEBOOK_ID") ENFORCED ;
CREATE INDEX USER_LOCATION_ALL_LOCATION_ID_IDX ON F9_APP_INSIGHT.USER_LOCATION_ALL (LOCATION_ID);
CREATE INDEX USER_LOCATION_ALL_TOWN_ID_IDX ON F9_APP_INSIGHT.USER_LOCATION_ALL (TOWN_ID);
CREATE INDEX USER_LOCATION_ALL_DOMAIN_ID_IDX ON F9_APP_INSIGHT.USER_LOCATION_ALL (DOMAIN_ID);
CREATE INDEX USER_LOCATION_ALL_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.USER_LOCATION_ALL (FACEBOOK_ID);
*/

/*
INSERT INTO F9_APP_INSIGHT.FRIEND_LOCATION(FACEBOOK_ID,LOCATION_ID,TOTAL_SIZES) 
select facebook_id,location_id,total_sizes from (
SELECT c.id1 AS "FACEBOOK_ID",a.location_id AS "LOCATION_ID",count(*) AS "TOTAL_SIZES",ROW_NUMBER() OVER (PARTITION BY c.id1 order by count(*) desc) rownumber FROM F9_APP_INSIGHT.user_location_all a
INNER JOIN F9_APP_INSIGHT.user_friend c ON a.facebook_id = c.id2
INNER JOIN F9_APP_INSIGHT.user_profile p ON c.id1 = p.facebook_id
WHERE c.id1 NOT IN (select facebook_id from F9_APP_INSIGHT.USER_LOCATION_ALL)
GROUP BY c.id1,a.location_id HAVING count(*) > 5 order by total_sizes desc) where rownumber in (1,2); 
*/


/*
INSERT INTO F9_APP_INSIGHT.FRIEND_LOCATION(FACEBOOK_ID,LOCATION_ID,TOTAL_SIZES) 
select facebook_id,LOCATION_ID,TOTAL_SIZES from (
select a.facebook_id,d.LOCATION_ID,count(*) as "TOTAL_SIZES",ROW_NUMBER() OVER (PARTITION BY a.facebook_id order by count(*) desc) rownumber FROM F9_APP_INSIGHT.user_profile a 
INNER JOIN F9_APP_INSIGHT.user_friend c ON a.facebook_id = c.id1
INNER JOIN F9_APP_INSIGHT.user_location_all d ON c.id2 = d.facebook_id
where a.facebook_id not in (select facebook_id from F9_APP_INSIGHT.user_location_all)
group by a.facebook_id,d.LOCATION_ID having count(*) > 5 order by total_sizes desc) where rownumber in (1,2); 
*/