/* BEGIN MQT_USER_HOMETOWN */
DROP TABLE F9_APP_INSIGHT.MQT_USER_HOMETOWN;;
CREATE TABLE F9_APP_INSIGHT.MQT_USER_HOMETOWN (FACEBOOK_ID,HOMETOWN_ID,HOMETOWN_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,count(*)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME, TOWN_ID,t.NAME as "TOWN_NAME", DOMAIN_ID,d.NAME as "DOMAIN_NAME"
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_HOMETOWN_LOCATION a, F9_STG_INSIGHT.FACEBOOK_USER_HOMETOWN b, F9_STG_INSIGHT.REF_CITY c
                , F9_STG_INSIGHT.REF_TOWN t, F9_STG_INSIGHT.REF_DOMAIN d
                WHERE a.SOURCE_ID = b.SOURCE_ID AND a.REF_ID = c.ID AND c.TOWN_ID = t.ID AND c.DOMAIN_ID = d.ID 
            UNION ALL
                SELECT FACEBOOK_ID,HOMETOWN_ID as "REF_ID",c.name as "REF_NAME",t.ID as "TOWN_ID",t.NAME as "TOWN_NAME",d.id as "DOMAIN_ID",d.name as "DOMAIN_NAME" 
                FROM F9_STG_INSIGHT.FRIEND_HOMETOWN a, F9_STG_INSIGHT.REF_CITY c
                , F9_STG_INSIGHT.REF_TOWN t, F9_STG_INSIGHT.REF_DOMAIN d
                WHERE a.HOMETOWN_ID = c.ID AND c.TOWN_ID = t.ID AND c.DOMAIN_ID = d.ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME)
            GROUP BY FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME
        ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_USER_HOMETOWN;
CREATE INDEX MQT_USER_HOMETOWN_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_HOMETOWN (FACEBOOK_ID);
CREATE INDEX MQT_USER_HOMETOWN_HOMETOWN_ID_IDX ON F9_APP_INSIGHT.MQT_USER_HOMETOWN (HOMETOWN_ID);
CREATE INDEX MQT_USER_HOMETOWN_TOWN_ID_IDX ON F9_APP_INSIGHT.MQT_USER_HOMETOWN (TOWN_ID);
CREATE INDEX MQT_USER_HOMETOWN_DOMAIN_ID_IDX ON F9_APP_INSIGHT.MQT_USER_HOMETOWN (DOMAIN_ID);
/* END MQT_USER_HOMETOWN */

/* BEGIN MQT_INSIGHT_USER_HOMETOWN */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,count(*)
        FROM
            (
                
            SELECT FACEBOOK_ID,REF_ID, REF_NAME, TOWN_ID,t.NAME as "TOWN_NAME", DOMAIN_ID,d.NAME as "DOMAIN_NAME", a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD,'HOMETOWN' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_HOMETOWN_LOCATION a, F9_STG_INSIGHT.FACEBOOK_USER_HOMETOWN b, F9_STG_INSIGHT.REF_CITY c
                , F9_STG_INSIGHT.REF_TOWN t, F9_STG_INSIGHT.REF_DOMAIN d
                WHERE a.SOURCE_ID = b.SOURCE_ID AND a.REF_ID = c.ID AND c.TOWN_ID = t.ID AND c.DOMAIN_ID = d.ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
            GROUP BY FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE
        ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN;
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_HOMETOWN_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_TOWN_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (TOWN_ID);
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_DOMAIN_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (DOMAIN_ID);
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_HOMETOWN_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_HOMETOWN (TYPE);
/* END MQT_INSIGHT_USER_HOMETOWN */

/* BEGIN MQT_USER_LOCATION */
CREATE TABLE F9_APP_INSIGHT.MQT_USER_LOCATION (FACEBOOK_ID,LOCATION_ID,LOCATION_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,count(*)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME, TOWN_ID,t.NAME as "TOWN_NAME", DOMAIN_ID,d.NAME as "DOMAIN_NAME"
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_HOMETOWN_LOCATION a, F9_STG_INSIGHT.FACEBOOK_USER_LOCATION b, F9_STG_INSIGHT.REF_CITY c
                , F9_STG_INSIGHT.REF_TOWN t, F9_STG_INSIGHT.REF_DOMAIN d
                WHERE a.SOURCE_ID = b.SOURCE_ID AND a.REF_ID = c.ID AND c.TOWN_ID = t.ID AND c.DOMAIN_ID = d.ID 
            UNION ALL
                SELECT FACEBOOK_ID,LOCATION_ID as "REF_ID",c.name as "REF_NAME",t.ID as "TOWN_ID",t.NAME as "TOWN_NAME",d.id as "DOMAIN_ID",d.name as "DOMAIN_NAME" 
                FROM F9_STG_INSIGHT.FRIEND_LOCATION a, F9_STG_INSIGHT.REF_CITY c
                , F9_STG_INSIGHT.REF_TOWN t, F9_STG_INSIGHT.REF_DOMAIN d
                WHERE a.LOCATION_ID = c.ID AND c.TOWN_ID = t.ID AND c.DOMAIN_ID = d.ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME)
            GROUP BY FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME
        ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
CREATE INDEX MQT_USER_LOCATION_LOCATION_ID_IDX ON F9_APP_INSIGHT.MQT_USER_LOCATION (LOCATION_ID);
CREATE INDEX MQT_USER_LOCATION_TOWN_ID_IDX ON F9_APP_INSIGHT.MQT_USER_LOCATION (TOWN_ID);
CREATE INDEX MQT_USER_LOCATION_DOMAIN_ID_IDX ON F9_APP_INSIGHT.MQT_USER_LOCATION (DOMAIN_ID);
/* END MQT_USER_LOCATION */

/* BEGIN MQT_INSIGHT_USER_LOCATION */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,count(*)
        FROM
            (
                
            SELECT FACEBOOK_ID,REF_ID, REF_NAME, TOWN_ID,t.NAME as "TOWN_NAME", DOMAIN_ID,d.NAME as "DOMAIN_NAME", a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD,'LOCATION' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_HOMETOWN_LOCATION a, F9_STG_INSIGHT.FACEBOOK_USER_LOCATION b, F9_STG_INSIGHT.REF_CITY c
                , F9_STG_INSIGHT.REF_TOWN t, F9_STG_INSIGHT.REF_DOMAIN d
                WHERE a.SOURCE_ID = b.SOURCE_ID AND a.REF_ID = c.ID AND c.TOWN_ID = t.ID AND c.DOMAIN_ID = d.ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
            GROUP BY FACEBOOK_ID,REF_ID,REF_NAME,TOWN_ID,TOWN_NAME,DOMAIN_ID,DOMAIN_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE
        ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION;
CREATE INDEX MQT_INSIGHT_USER_LOCATION_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_LOCATION_LOCATION_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_LOCATION_TOWN_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (TOWN_ID);
CREATE INDEX MQT_INSIGHT_USER_LOCATION_DOMAIN_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (DOMAIN_ID);
CREATE INDEX MQT_INSIGHT_USER_LOCATION_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_LOCATION_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_LOCATION_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LOCATION (TYPE);
/* END MQT_INSIGHT_USER_LOCATION */

/* BEGIN MQT_USER_NATION */
CREATE TABLE F9_APP_INSIGHT.MQT_USER_NATION ( FACEBOOK_ID,NATION_ID,NATION_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,COUNT(FACEBOOK_ID)
        FROM
            (SELECT FACEBOOK_ID,REF_ID, REF_NAME
            FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_NATION a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE a.SOURCE_ID = b.GROUP_ID ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME)
        GROUP BY A.FACEBOOK_ID, A.REF_ID, A.REF_NAME ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
CREATE INDEX MQT_USER_NATION_NATION_ID_IDX ON F9_APP_INSIGHT.MQT_USER_NATION (NATION_ID);
CREATE INDEX MQT_USER_NATION_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_NATION (FACEBOOK_ID);
/* END MQT_USER_NATION */

/* BEGIN MQT_INSIGHT_USER_NATION */
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_NATION ( FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,COUNT(FACEBOOK_ID)
        FROM
            (SELECT FACEBOOK_ID,REF_ID, REF_NAME, a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD
            FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_NATION a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE a.SOURCE_ID = b.GROUP_ID ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD)
        GROUP BY A.FACEBOOK_ID, A.REF_ID, A.REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_NATION;
CREATE INDEX MQT_INSIGHT_USER_NATION_NATION_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_NATION (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_NATION_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_NATION (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_NATION_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_NATION (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_NATION_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_NATION (KEYWORD);
/* END MQT_INSIGHT_USER_NATION */


/* BEGIN MQT_USER_REGILION */
CREATE TABLE F9_APP_INSIGHT.MQT_USER_REGILION ( FACEBOOK_ID,REGILION_ID,REGILION_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,COUNT(FACEBOOK_ID)
        FROM
            (SELECT FACEBOOK_ID,REF_ID, REF_NAME
            FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_REGILION a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE a.SOURCE_ID = b.GROUP_ID ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME)
        GROUP BY A.FACEBOOK_ID, A.REF_ID, A.REF_NAME ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
CREATE INDEX MQT_USER_REGILION_REGILION_ID_IDX ON F9_APP_INSIGHT.MQT_USER_REGILION (REGILION_ID);
CREATE INDEX MQT_USER_REGILION_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_REGILION (FACEBOOK_ID);
/* END MQT_USER_REGILION */

/* BEGIN MQT_INSIGHT_USER_REGILION */
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_REGILION ( FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,COUNT(FACEBOOK_ID)
        FROM
            (SELECT FACEBOOK_ID,REF_ID, REF_NAME, a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD
            FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_REGILION a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE a.SOURCE_ID = b.GROUP_ID ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD)
        GROUP BY A.FACEBOOK_ID, A.REF_ID, A.REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_REGILION;
CREATE INDEX MQT_INSIGHT_USER_REGILION_REGILION_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_REGILION (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_REGILION_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_REGILION (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_REGILION_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_REGILION (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_REGILION_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_REGILION (KEYWORD);
/* END MQT_INSIGHT_USER_REGILION */

/* BEGIN MQT_USER_LANGUAGES */
CREATE TABLE F9_APP_INSIGHT.MQT_USER_LANGUAGES ( FACEBOOK_ID,LANGUAGE_ID,LANGUAGE_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_LANGUAGES a, F9_STG_INSIGHT.FACEBOOK_USER_LANGUAGES b
                WHERE a.SOURCE_ID = b.SOURCE_ID 
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID, REF_NAME
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_LANGUAGES a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                WHERE a.SOURCE_ID = b.GROUP_ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
CREATE INDEX MQT_USER_LANGUAGES_LANGUAGE_ID_IDX ON F9_APP_INSIGHT.MQT_USER_LANGUAGES (LANGUAGE_ID);
CREATE INDEX MQT_USER_LANGUAGES_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_LANGUAGES (FACEBOOK_ID);
/* END MQT_USER_LANGUAGES */

/* BEGIN MQT_INSIGHT_USER_LANGUAGES */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES ( FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD,'LANGUAGES' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_LANGUAGES a, F9_STG_INSIGHT.FACEBOOK_USER_LANGUAGES b
                WHERE a.SOURCE_ID = b.SOURCE_ID 
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD,'GROUP' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_LANGUAGES a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                WHERE a.SOURCE_ID = b.GROUP_ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES;
CREATE INDEX MQT_INSIGHT_USER_LANGUAGES_LANGUAGE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_LANGUAGES_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_LANGUAGES_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_LANGUAGES_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_LANGUAGES_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_LANGUAGES (TYPE);
/* END MQT_INSIGHT_USER_LANGUAGES */

/* BEGIN MQT_USER_INTEREST */
CREATE TABLE F9_APP_INSIGHT.MQT_USER_INTEREST ( FACEBOOK_ID,INTEREST_ID,INTEREST_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,COUNT(FACEBOOK_ID)
        FROM
            (SELECT FACEBOOK_ID,REF_ID, REF_NAME
            FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_INTEREST a, F9_STG_INSIGHT.FACEBOOK_USER_SOURCE b
            WHERE a.SOURCE_ID = b.SOURCE_ID ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
CREATE INDEX MQT_USER_INTEREST_INTEREST_ID_IDX ON F9_APP_INSIGHT.MQT_USER_INTEREST (INTEREST_ID);
CREATE INDEX MQT_USER_INTEREST_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_INTEREST (FACEBOOK_ID);
/* END MQT_USER_INTEREST */

/* BEGIN MQT_INSIGHT_USER_SCHOOL_1 */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 ( FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT
            FACEBOOK_ID,
            REF_ID,
            REF_NAME,
            REF_CITY_ID,
            REF_CITY_NAME,
            SOURCE_ID,
            SOURCE_NAME,
            KEYWORD,
            TYPE,
            COUNT(FACEBOOK_ID)
        FROM
            (
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'GROUP' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_SCHOOL_1 a,
                F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE
                a.SOURCE_ID = b.GROUP_ID
        UNION ALL
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'EDUCATION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_SCHOOL_1 a,
                F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b
            WHERE
                a.SOURCE_ID = b.SOURCE_ID AND a.education_school = true
        UNION ALL
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'EDUCATION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_SCHOOL_1 a,
                F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b,
                F9_APP_INSIGHT.USER_HOMETOWN_ALL c
            WHERE
                a.SOURCE_ID = b.SOURCE_ID AND a.education_school = false
                AND b.FACEBOOK_ID = c.FACEBOOK_ID
                AND c.HOMETOWN_ID = A.REF_CITY_ID ) AS A(FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,
            SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
        GROUP BY
            FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,
            SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE ) 
            DATA INITIALLY DEFERRED 
            REFRESH IMMEDIATE 
            MAINTAINED BY SYSTEM 
            ENABLE QUERY OPTIMIZATION 
            COMPRESS YES STATIC 
            DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1" 
            ORGANIZE BY ROW 
            NOT LOGGED INITIALLY;
            
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1;
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_1_REF_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_1_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_1_REF_CITY_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 (REF_CITY_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_1_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_1_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_1_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_1 (TYPE);
/* END MQT_INSIGHT_USER_SCHOOL_1 */

/* BEGIN MQT_INSIGHT_USER_SCHOOL_2 */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 ( FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT
            FACEBOOK_ID,
            REF_ID,
            REF_NAME,
            REF_CITY_ID,
            REF_CITY_NAME,
            SOURCE_ID,
            SOURCE_NAME,
            KEYWORD,
            TYPE,
            COUNT(FACEBOOK_ID)
        FROM
            (
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'GROUP' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_SCHOOL_2 a,
                F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE
                a.SOURCE_ID = b.GROUP_ID
        UNION ALL
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'EDUCATION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_SCHOOL_2 a,
                F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b
            WHERE
                a.SOURCE_ID = b.SOURCE_ID AND a.education_school = true
        UNION ALL
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'EDUCATION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_SCHOOL_2 a,
                F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b,
                F9_APP_INSIGHT.USER_HOMETOWN_ALL c
            WHERE
                a.SOURCE_ID = b.SOURCE_ID AND a.education_school = false
                AND b.FACEBOOK_ID = c.FACEBOOK_ID
                AND c.HOMETOWN_ID = A.REF_CITY_ID ) AS A(FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,
            SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
        GROUP BY
            FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,
            SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE ) 
            DATA INITIALLY DEFERRED 
            REFRESH IMMEDIATE 
            MAINTAINED BY SYSTEM 
            ENABLE QUERY OPTIMIZATION 
            COMPRESS YES STATIC 
            DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1" 
            ORGANIZE BY ROW 
            NOT LOGGED INITIALLY;
            
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2;
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_2_REF_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_2_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_2_REF_CITY_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 (REF_CITY_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_2_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_2_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_2_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_2 (TYPE);
/* END MQT_INSIGHT_USER_SCHOOL_2 */

/* BEGIN MQT_INSIGHT_USER_SCHOOL_3 */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 ( FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT
            FACEBOOK_ID,
            REF_ID,
            REF_NAME,
            REF_CITY_ID,
            REF_CITY_NAME,
            SOURCE_ID,
            SOURCE_NAME,
            KEYWORD,
            TYPE,
            COUNT(FACEBOOK_ID)
        FROM
            (
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'GROUP' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_SCHOOL_3 a,
                F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
            WHERE
                a.SOURCE_ID = b.GROUP_ID
        UNION ALL
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'EDUCATION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_SCHOOL_3 a,
                F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b
            WHERE
                a.SOURCE_ID = b.SOURCE_ID AND a.education_school = true
        UNION ALL
            SELECT
                b.FACEBOOK_ID,
                a.REF_ID,
                a.REF_NAME,
                a.REF_CITY_ID,
                a.REF_CITY_NAME,
                a.SOURCE_ID,
                a.SOURCE_NAME,
                a.KEYWORD,
                'EDUCATION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_SCHOOL_3 a,
                F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b,
                F9_APP_INSIGHT.USER_HOMETOWN_ALL c
            WHERE
                a.SOURCE_ID = b.SOURCE_ID AND a.education_school = false
                AND b.FACEBOOK_ID = c.FACEBOOK_ID
                AND c.HOMETOWN_ID = A.REF_CITY_ID ) AS A(FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,
            SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
        GROUP BY
            FACEBOOK_ID,REF_ID,REF_NAME,REF_CITY_ID,REF_CITY_NAME,
            SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE ) 
            DATA INITIALLY DEFERRED 
            REFRESH IMMEDIATE 
            MAINTAINED BY SYSTEM 
            ENABLE QUERY OPTIMIZATION 
            COMPRESS YES STATIC 
            DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1" 
            ORGANIZE BY ROW 
            NOT LOGGED INITIALLY;
            
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3;
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_3_REF_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_3_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_3_REF_CITY_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 (REF_CITY_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_3_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_3_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_SCHOOL_3_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_SCHOOL_3 (TYPE);
/* END MQT_INSIGHT_USER_SCHOOL_3 */


/* BEGIN MQT_USER_COMPANY */
DROP TABLE F9_APP_INSIGHT.MQT_USER_COMPANY;
CREATE TABLE F9_APP_INSIGHT.MQT_USER_COMPANY ( FACEBOOK_ID,COMPANY_ID,COMPANY_NAME,COMPANY_BLOCK_ID,SCALE_ID,FIELD_ID,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,COMPANY_BLOCK_ID,COMPANY_SCALE_ID,COMPANY_FIELD_ID,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,c.COMPANY_BLOCK_ID, c.COMPANY_SCALE_ID, c.COMPANY_FIELD_ID
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_COMPANY a, F9_STG_INSIGHT.FACEBOOK_USER_WORK b
                , F9_STG_INSIGHT.REF_COMPANY c
                WHERE a.SOURCE_ID = b.SOURCE_ID AND a.REF_ID = c.ID
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,c.COMPANY_BLOCK_ID, c.COMPANY_SCALE_ID, c.COMPANY_FIELD_ID
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_COMPANY a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                , F9_STG_INSIGHT.REF_COMPANY c
                WHERE a.SOURCE_ID = b.GROUP_ID AND a.REF_ID = c.ID
            UNION ALL
            	SELECT FACEBOOK_ID,COMPANY_ID AS REF_ID, c.NAME AS REF_NAME, c.COMPANY_BLOCK_ID, c.COMPANY_SCALE_ID, c.COMPANY_FIELD_ID
            	FROM F9_STG_INSIGHT.FRIEND_COMPANY a, F9_STG_INSIGHT.REF_COMPANY c
            	WHERE a.COMPANY_ID = c.ID
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,COMPANY_BLOCK_ID,COMPANY_SCALE_ID,COMPANY_FIELD_ID)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME,A.COMPANY_BLOCK_ID,A.COMPANY_SCALE_ID,A.COMPANY_FIELD_ID ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
       REFRESH TABLE F9_APP_INSIGHT.MQT_USER_COMPANY;
CREATE INDEX MQT_USER_COMPANY_COMPANY_ID_IDX ON F9_APP_INSIGHT.MQT_USER_COMPANY (COMPANY_ID);
CREATE INDEX MQT_USER_COMPANY_COMPANY_BLOCK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_COMPANY (COMPANY_BLOCK_ID);
CREATE INDEX MQT_USER_COMPANY_SCALE_ID_IDX ON F9_APP_INSIGHT.MQT_USER_COMPANY (SCALE_ID);
CREATE INDEX MQT_USER_COMPANY_FIELD_ID_IDX ON F9_APP_INSIGHT.MQT_USER_COMPANY (FIELD_ID);
CREATE INDEX MQT_USER_COMPANY_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_COMPANY (FACEBOOK_ID);
/* END MQT_USER_COMPANY */

/* BEGIN MQT_INSIGHT_USER_COMPANY */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_COMPANY;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_COMPANY ( FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,TYPE,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,b.SOURCE_ID,b.SOURCE_NAME,'WORK' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_COMPANY a, F9_STG_INSIGHT.FACEBOOK_USER_WORK b
                , F9_STG_INSIGHT.REF_COMPANY c
                WHERE a.SOURCE_ID = b.SOURCE_ID AND a.REF_ID = c.ID
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,b.GROUP_ID SOURCE_ID,d.NAME SOURCE_NAME,'GROUP' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_COMPANY a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                , F9_STG_INSIGHT.REF_COMPANY c , F9_STG_INSIGHT.FACEBOOK_GROUP d
                WHERE a.SOURCE_ID = b.GROUP_ID AND a.REF_ID = c.ID AND b.GROUP_ID = d.GROUP_ID
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,TYPE)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME,A.SOURCE_ID,A.SOURCE_NAME,A.TYPE ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
       REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_COMPANY;
CREATE INDEX MQT_INSIGHT_USER_COMPANY_COMPANY_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COMPANY (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_COMPANY_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COMPANY (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_COMPANY_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COMPANY (FACEBOOK_ID);
/* END MQT_INSIGHT_USER_COMPANY */

/* BEGIN MQT_USER_COLLEGE */

DROP TABLE F9_APP_INSIGHT.MQT_USER_INSIGHT_COLLEGE;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE ( FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD,'EDUCATION' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_EDUCATION_COLLEGE a, F9_STG_INSIGHT.FACEBOOK_USER_EDUCATION b
                WHERE a.SOURCE_ID = b.SOURCE_ID 
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID, REF_NAME,a.SOURCE_ID,a.SOURCE_NAME,a.KEYWORD,'GROUP' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_COLLEGE a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                WHERE a.SOURCE_ID = b.GROUP_ID 
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
        GROUP BY FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE;
CREATE INDEX MQT_INSIGHT_USER_COLLEGE_REF_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_COLLEGE_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_COLLEGE_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_COLLEGE_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_COLLEGE_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_COLLEGE (TYPE);
/* END MQT_USER_COLLEGE */

/* BEGIN MQT_USER_JOB */
DROP TABLE F9_APP_INSIGHT.MQT_USER_JOB;
CREATE TABLE F9_APP_INSIGHT.MQT_USER_JOB ( FACEBOOK_ID,JOB_ID,JOB_NAME,CAREER_ID,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,CAREER_ID,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID,c.NAME REF_NAME,CAREER_ID
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_JOB a, F9_STG_INSIGHT.FACEBOOK_USER_WORK b, F9_STG_INSIGHT.REF_JOB c
                WHERE a.SOURCE_ID = b.POSITION_ID AND a.REF_ID = c.ID
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID,c.NAME REF_NAME,CAREER_ID
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_JOB a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b, F9_STG_INSIGHT.REF_JOB c
                WHERE a.SOURCE_ID = b.GROUP_ID  AND a.REF_ID = c.ID
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,CAREER_ID)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME,A.CAREER_ID ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_USER_JOB;
CREATE INDEX MQT_USER_JOB_JOB_ID_IDX ON F9_APP_INSIGHT.MQT_USER_JOB (JOB_ID);
CREATE INDEX MQT_USER_JOB_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_JOB (FACEBOOK_ID);
CREATE INDEX MQT_USER_JOB_CAREER_ID_IDX ON F9_APP_INSIGHT.MQT_USER_JOB (CAREER_ID);
/* END MQT_USER_JOB */

/* BEGIN MQT_INSIGHT_USER_JOB */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB ( FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID,c.NAME REF_NAME,a.SOURCE_ID,a.SOURCE_NAME, a.KEYWORD,'WORK' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_JOB a, F9_STG_INSIGHT.FACEBOOK_USER_WORK b, F9_STG_INSIGHT.REF_JOB c
                WHERE a.SOURCE_ID = b.POSITION_ID AND a.REF_ID = c.ID
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID,c.NAME REF_NAME,d.GROUP_ID SOURCE_ID,d.NAME SOURCE_NAME,'' KEYWORD,'GROUP' TYPE
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_JOB a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b, F9_STG_INSIGHT.REF_JOB c
                , F9_STG_INSIGHT.FACEBOOK_GROUP d
                WHERE a.SOURCE_ID = b.GROUP_ID  AND a.REF_ID = c.ID AND b.GROUP_ID = d.GROUP_ID
            ) 
            AS A(FACEBOOK_ID,REF_ID,REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME,SOURCE_ID,SOURCE_NAME,KEYWORD,TYPE ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB;
CREATE INDEX MQT_INSIGHT_USER_JOB_JOB_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_JOB_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_JOB_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_JOB_KEYWORD_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB (KEYWORD);
CREATE INDEX MQT_INSIGHT_USER_JOB_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_JOB (TYPE);
/* END MQT_INSIGHT_USER_JOB */

/* BEGIN MQT_INSIGHT_USER_RANK */
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK;
CREATE TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK ( FACEBOOK_ID,RANK_ID,RANK_NAME,POSITION_ID,POSITION_NAME,SOURCE_ID,SOURCE_NAME,COMPANY_ID,COMPANY_NAME,COMPANY_BLOCK_ID,COMPANY_SCALE_ID,COMPANY_FIELD_ID,TYPE,STRENGTH) AS (
        SELECT FACEBOOK_ID,RANK_ID,RANK_NAME,POSITION_ID,POSITION_NAME,SOURCE_ID,SOURCE_NAME,COMPANY_ID,COMPANY_NAME,COMPANY_BLOCK_ID,COMPANY_SCALE_ID,COMPANY_FIELD_ID,TYPE,COUNT(FACEBOOK_ID)
        FROM
            (
            SELECT
                b.FACEBOOK_ID,
                c.ID RANK_ID,c.NAME RANK_NAME,
                b.POSITION_ID,b.POSITION_NAME,
                b.SOURCE_ID,b.SOURCE_NAME,
                f.ID COMPANY_ID,f.NAME COMPANY_NAME,
                f.COMPANY_BLOCK_ID,f.COMPANY_SCALE_ID,f.COMPANY_FIELD_ID,
                'POSITION' TYPE
            FROM
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_RANK a,
                F9_STG_INSIGHT.FACEBOOK_USER_WORK b,
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_COMPANY e,
                F9_STG_INSIGHT.REF_RANK c,
                F9_STG_INSIGHT.REF_COMPANY f
            WHERE
                a.SOURCE_ID = b.POSITION_ID
                AND a.REF_ID = c.ID
                AND b.SOURCE_ID = e.SOURCE_ID
                AND e.REF_ID = f.ID   
            UNION ALL
            SELECT
                b.FACEBOOK_ID,
                c.ID RANK_ID,c.NAME RANK_NAME,
                CAST(d.AGE as VARCHAR(255 OCTETS)) POSITION_ID,CAST(d.AGE as VARCHAR(255 OCTETS)) POSITION_NAME,
                b.SOURCE_ID,b.SOURCE_NAME,
                f.ID COMPANY_ID,f.NAME COMPANY_NAME,
                f.COMPANY_BLOCK_ID,f.COMPANY_SCALE_ID,f.COMPANY_FIELD_ID,
                'WORK_AGE' TYPE
            FROM
                F9_APP_INSIGHT.USER_AGE_ALL d,
                F9_STG_INSIGHT.FACEBOOK_USER_WORK b,
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_WORK_COMPANY e,
                F9_STG_INSIGHT.REF_RANK c,
                F9_STG_INSIGHT.REF_COMPANY f
            WHERE
                b.FACEBOOK_ID = d.FACEBOOK_ID
                AND b.SOURCE_ID = e.SOURCE_ID
                AND e.REF_ID = f.ID   
                AND ( (c.AGE_FROM > 0
                AND c.AGE_TO > 0
                AND d.AGE >= c.AGE_FROM
                AND d.AGE <= c.AGE_TO)
                OR (c.AGE_FROM IS NULL
                AND d.AGE <= c.AGE_TO)
                OR (c.AGE_TO IS NULL
                AND d.AGE >= c.AGE_FROM)) 
            UNION ALL
            SELECT
                b.FACEBOOK_ID,
                c.ID RANK_ID,c.NAME RANK_NAME,
                CAST(d.AGE as VARCHAR(255 OCTETS)) POSITION_ID,CAST(d.AGE as VARCHAR(255 OCTETS)) POSITION_NAME,
                b.GROUP_ID SOURCE_ID,h.NAME SOURCE_NAME,
                f.ID COMPANY_ID,f.NAME COMPANY_NAME,
                f.COMPANY_BLOCK_ID,f.COMPANY_SCALE_ID,f.COMPANY_FIELD_ID,
                'GROUP_AGE' TYPE
            FROM
                F9_APP_INSIGHT.USER_AGE_ALL d,
                F9_STG_INSIGHT.FACEBOOK_USER_GROUP b,
                F9_STG_INSIGHT.FACEBOOK_GROUP h,
                F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_COMPANY e,
                F9_STG_INSIGHT.REF_RANK c,
                F9_STG_INSIGHT.REF_COMPANY f
            WHERE
                b.FACEBOOK_ID = d.FACEBOOK_ID
                AND b.GROUP_ID = h.GROUP_ID
                AND b.GROUP_ID = e.SOURCE_ID
                AND e.REF_ID = f.ID   
                AND ( (c.AGE_FROM > 0
                AND c.AGE_TO > 0
                AND d.AGE >= c.AGE_FROM
                AND d.AGE <= c.AGE_TO)
                OR (c.AGE_FROM IS NULL
                AND d.AGE <= c.AGE_TO)
                OR (c.AGE_TO IS NULL
                AND d.AGE >= c.AGE_FROM))
            ) 
            AS A(FACEBOOK_ID,RANK_ID,RANK_NAME,POSITION_ID,POSITION_NAME,SOURCE_ID,SOURCE_NAME,COMPANY_ID,COMPANY_NAME,COMPANY_BLOCK_ID,COMPANY_SCALE_ID,COMPANY_FIELD_ID,TYPE)
        GROUP BY A.FACEBOOK_ID,A.RANK_ID,A.RANK_NAME,A.POSITION_ID,A.POSITION_NAME,A.SOURCE_ID,A.SOURCE_NAME,A.COMPANY_ID,A.COMPANY_NAME,COMPANY_BLOCK_ID,COMPANY_SCALE_ID,COMPANY_FIELD_ID,TYPE ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK;
CREATE INDEX MQT_INSIGHT_USER_RANK_RANK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (RANK_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_COMPANY_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (COMPANY_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_COMPANY_BLOCK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (COMPANY_BLOCK_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_COMPANY_SCALE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (COMPANY_SCALE_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_COMPANY_FIELD_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (COMPANY_FIELD_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_SOURCE_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (SOURCE_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_POSITION_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (POSITION_ID);
CREATE INDEX MQT_INSIGHT_USER_RANK_COMPANY_TYPE_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_RANK (TYPE);
/* END MQT_INSIGHT_USER_RANK */



/* BEGIN MQT_USER_BEHAVIOR_TYPE */
CREATE TABLE F9_APP_INSIGHT.MQT_USER_BEHAVIOR_TYPE ( FACEBOOK_ID,BEHAVIOR_TYPE_ID,BEHAVIOR_TYPE_NAME,STRENGTH) AS (
        SELECT FACEBOOK_ID,REF_ID,REF_NAME,COUNT(FACEBOOK_ID)
        FROM
            (
                SELECT FACEBOOK_ID,REF_ID, REF_NAME
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_BEHAVIOR_TYPE a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                WHERE a.SOURCE_ID = b.GROUP_ID 
            UNION ALL
                SELECT FACEBOOK_ID,REF_ID, REF_NAME
                FROM F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_BEHAVIOR_TYPE_NOT_KEYWORD a, F9_STG_INSIGHT.FACEBOOK_USER_GROUP b
                WHERE a.SOURCE_ID = b.GROUP_ID 
            )
            AS A(FACEBOOK_ID,REF_ID,REF_NAME)
        GROUP BY A.FACEBOOK_ID,A.REF_ID,A.REF_NAME ) 
        DATA INITIALLY DEFERRED REFRESH IMMEDIATE MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC   
        DISTRIBUTE BY HASH("FACEBOOK_ID")   IN "USERSPACE1" 
        ORGANIZE BY ROW NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_USER_BEHAVIOR_TYPE;
CREATE INDEX MQT_USER_BEHAVIOR_TYPE_BEHAVIOR_TYPE_ID_IDX ON F9_APP_INSIGHT.MQT_USER_BEHAVIOR_TYPE (BEHAVIOR_TYPE_ID);
CREATE INDEX MQT_USER_BEHAVIOR_TYPE_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_USER_BEHAVIOR_TYPE (FACEBOOK_ID);
/* END MQT_USER_BEHAVIOR_TYPE */

/*BEGIN MQT_INSIGHT_USER_INCOME*/
DROP TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME;
CREATE TABLE
        F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME (FACEBOOK_ID,REF_ID,TYPE,INCOME_ID,INCOME_NAME,INCOME_MAX,STRENGTH) AS (
            select FACEBOOK_ID, REF_ID, TYPE, INCOME_ID, INCOME_NAME, INCOME_MAX, count(*) FROM (
                SELECT
                    a.FACEBOOK_ID,
                    a.REF_ID,
                    a.TYPE,
                    c.ID INCOME_ID,
                    c.NAME INCOME_NAME,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.USER_INCOME_RULE a,
                    F9_STG_INSIGHT.REF_NON_MANAGER b,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.REF_ID = b.ID
                    AND b.INCOME_ID = c.ID
                    AND a.TYPE = 'non-manager'
            UNION ALL
                SELECT
                    a.FACEBOOK_ID,
                    a.REF_ID,
                    a.TYPE,
                    c.ID INCOME_ID,
                    c.NAME INCOME_NAME,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.USER_INCOME_RULE a,
                    F9_STG_INSIGHT.REF_MANAGER b,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.REF_ID = b.ID
                    AND b.INCOME_ID = c.ID
                    AND a.TYPE = 'manager'
            UNION ALL
                SELECT
                    b.FACEBOOK_ID,
                    a.REF_ID,
                    'behavior' TYPE,
                    c.ID INCOME_ID,
                    c.NAME INCOME_NAME,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_BEHAVIOR_TYPE_NOT_KEYWORD a ,
                    F9_STG_INSIGHT.FACEBOOK_USER_GROUP b ,
                    F9_STG_INSIGHT.REF_BEHAVIOR_TYPE d ,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.SOURCE_ID = b.GROUP_ID
                    AND a.REF_ID = d.ID
                    AND d.INCOME_ID = c.ID
            UNION ALL
                SELECT
                    b.FACEBOOK_ID,
                    a.REF_ID,
                    'behavior' TYPE,
                    c.ID INCOME_ID,
                    c.NAME INCOME_NAME,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_BEHAVIOR_TYPE a ,
                    F9_STG_INSIGHT.FACEBOOK_USER_GROUP b ,
                    F9_STG_INSIGHT.REF_BEHAVIOR_TYPE d ,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.SOURCE_ID = b.GROUP_ID
                    AND a.REF_ID = d.ID
                    AND d.INCOME_ID = c.ID
            UNION ALL
                SELECT
                    a.FACEBOOK_ID,
                    b.ID REF_ID,
                    'sticker' TYPE,
                    c.ID INCOME_ID,
                    c.NAME INCOME_NAME,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.FACEBOOK_INSIGHT_USER_STICKER a ,
                    F9_STG_INSIGHT.REF_STICKER b ,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                	a.STICKER_ID = b.ID 
                    AND b.INCOME_ID = c.ID
            ) A (FACEBOOK_ID, REF_ID, TYPE, INCOME_ID, INCOME_NAME, INCOME_MAX)
            GROUP BY FACEBOOK_ID, REF_ID, TYPE, INCOME_ID, INCOME_NAME, INCOME_MAX
        ) 
        DATA INITIALLY DEFERRED 
        REFRESH IMMEDIATE 
        MAINTAINED BY SYSTEM 
        ENABLE QUERY OPTIMIZATION 
        COMPRESS YES STATIC 
        DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1" 
        ORGANIZE BY ROW 
        NOT LOGGED INITIALLY;
REFRESH TABLE F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME;
CREATE INDEX MQT_INSIGHT_USER_INCOME_REF_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME (REF_ID);
CREATE INDEX MQT_INSIGHT_USER_INCOME_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME (FACEBOOK_ID);
CREATE INDEX MQT_INSIGHT_USER_INCOME_INCOME_ID_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME (INCOME_ID);
CREATE INDEX MQT_INSIGHT_USER_INCOME_INCOME_MAX_IDX ON F9_APP_INSIGHT.MQT_INSIGHT_USER_INCOME (INCOME_MAX);
/*END MQT_INSIGHT_USER_INCOME*/

/* BEGIN MQT_USER_INCOME */
CREATE
    TABLE
        F9_APP_INSIGHT.MQT_USER_INCOME (FACEBOOK_ID,
        INCOME_ID,
        INCOME_NAME) AS (
        SELECT
            A.FACEBOOK_ID,
            b.ID,
            b.NAME
        FROM
            (
            SELECT
                FACEBOOK_ID,
                MAX(INCOME_MAX) INCOME_MAX
            FROM
                (
                SELECT
                    a.FACEBOOK_ID,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.USER_INCOME_RULE a,
                    F9_STG_INSIGHT.REF_NON_MANAGER b,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.REF_ID = b.ID
                    AND b.INCOME_ID = c.ID
                    AND a.TYPE = 'non-manager'
            UNION ALL
                SELECT
                    a.FACEBOOK_ID,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.USER_INCOME_RULE a,
                    F9_STG_INSIGHT.REF_MANAGER b,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.REF_ID = b.ID
                    AND b.INCOME_ID = c.ID
                    AND a.TYPE = 'manager'
            UNION ALL
                SELECT
                    b.FACEBOOK_ID,
                    c.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.FACEBOOK_INSIGHT_GROUP_BEHAVIOR_TYPE a ,
                    F9_STG_INSIGHT.FACEBOOK_USER_GROUP b ,
                    F9_STG_INSIGHT.REF_BEHAVIOR_TYPE d ,
                    F9_STG_INSIGHT.REF_INCOME c
                WHERE
                    a.SOURCE_ID = b.GROUP_ID
                    AND a.REF_ID = d.ID
                    AND d.INCOME_ID = c.ID
            UNION ALL
                SELECT
                    a.FACEBOOK_ID,
                    b.MAX INCOME_MAX
                FROM
                    F9_STG_INSIGHT.REF_STICKER a ,
                    F9_STG_INSIGHT.REF_INCOME b
                WHERE
                    a.INCOME_ID = b.ID ) AS A(FACEBOOK_ID,
                INCOME_MAX)
            GROUP BY
                FACEBOOK_ID ) A(FACEBOOK_ID,
            INCOME_MAX),
            F9_STG_INSIGHT.REF_INCOME b
        WHERE
            A.INCOME_MAX = b.MAX ) DATA INITIALLY DEFERRED REFRESH DEFERRED MAINTAINED BY SYSTEM ENABLE QUERY OPTIMIZATION COMPRESS YES STATIC DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1" ORGANIZE BY ROW NOT LOGGED INITIALLY;
/* END MQT_USER_INCOME */