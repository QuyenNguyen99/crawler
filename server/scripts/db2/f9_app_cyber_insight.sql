 CREATE TABLE "F9_APP_CYBER_INSIGHT"."FRIEND_AGE"  (
    "FACEBOOK_ID" VARCHAR(15 OCTETS) NOT NULL , 
    "AGE" INTEGER NOT NULL, 
    "TOTAL_SIZES" INTEGER, 
    "TOTAL_LINKS" INTEGER)   
   COMPRESS YES STATIC  
   DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1"  
   ORGANIZE BY ROW NOT LOGGED INITIALLY ;
--ALTER TABLE "F9_APP_INSIGHT"."FRIEND_AGE" ADD PRIMARY KEY ("FACEBOOK_ID", "AGE") ENFORCED ;
CREATE INDEX FRIEND_AGE_FACEBOOK_ID_AGE_IDX ON F9_APP_CYBER_INSIGHT.FRIEND_AGE (FACEBOOK_ID,AGE);
CREATE INDEX FRIEND1_AGE_AGE_IDX ON F9_APP_CYBER_INSIGHT.FRIEND_AGE (AGE);
CREATE INDEX FRIEND1_AGE_FACEBOOK_ID_IDX ON F9_APP_CYBER_INSIGHT.FRIEND_AGE (FACEBOOK_ID);
CREATE INDEX FRIEND1_AGE_TOTAL_SIZES_IDX ON F9_APP_INSIGHT.FRIEND_AGE (TOTAL_SIZES);

DROP TABLE F9_APP_CYBER_INSIGHT.USER_FRIEND_AGE_3;
CREATE TABLE "F9_APP_CYBER_INSIGHT"."USER_FRIEND_AGE_3"  (
    "ID1" varchar(15 OCTETS) NOT NULL, 
    "ID2" varchar(15 OCTETS) NOT NULL, 
    "AGE" INTEGER NOT NULL)
   COMPRESS YES STATIC DISTRIBUTE BY HASH("ID1","ID2") IN "USERSPACE1" ORGANIZE BY ROW NOT LOGGED INITIALLY ;
ALTER TABLE "F9_APP_CYBER_INSIGHT"."USER_FRIEND_AGE_3" ADD PRIMARY KEY ("ID1","ID2") ENFORCED ;
CREATE INDEX USER_FRIEND_AGE_3_ID1_IDX ON F9_APP_CYBER_INSIGHT.USER_FRIEND_AGE_3 (ID1);
CREATE INDEX USER_FRIEND_AGE_3_ID2_IDX ON F9_APP_CYBER_INSIGHT.USER_FRIEND_AGE_3 (ID2);
CREATE INDEX USER_FRIEND_AGE_3_AGE_IDX ON F9_APP_CYBER_INSIGHT.USER_FRIEND_AGE_3 (AGE);


DROP TABLE F9_APP_CYBER_INSIGHT.USER_AGE_STATUS;
CREATE TABLE "F9_APP_CYBER_INSIGHT"."USER_AGE_STATUS"  (
    "FACEBOOK_ID" varchar(15 OCTETS) NOT NULL, 
    "LIST_FRIEND" CLOB(1048576 OCTETS) NOT NULL,
    "AGE" INTEGER NOT NULL,
    "TOTAL_SIZE" INTEGER NOT NULL,
    "STATUS" INTEGER NOT NULL,
    "DONE" INTEGER NOT NULL
    )
   COMPRESS YES STATIC DISTRIBUTE BY HASH("FACEBOOK_ID","AGE") IN "USERSPACE1" ORGANIZE BY ROW NOT LOGGED INITIALLY ;
ALTER TABLE "F9_APP_CYBER_INSIGHT"."USER_AGE_STATUS" ADD PRIMARY KEY ("FACEBOOK_ID","AGE") ENFORCED ;
CREATE INDEX USER_AGE_STATUS_STATUS_IDX ON F9_APP_CYBER_INSIGHT.USER_AGE_STATUS (STATUS);
CREATE INDEX USER_AGE_STATUS_DONE_IDX ON F9_APP_CYBER_INSIGHT.USER_AGE_STATUS (DONE);
CREATE INDEX USER_AGE_STATUS_AGE_IDX ON F9_APP_CYBER_INSIGHT.USER_AGE_STATUS (AGE);
CREATE INDEX USER_AGE_STATUS_TOTAL_SIZE_IDX ON F9_APP_CYBER_INSIGHT.USER_AGE_STATUS (TOTAL_SIZE);
CREATE INDEX USER_AGE_STATUS_FACEBOOK_ID_IDX ON F9_APP_CYBER_INSIGHT.USER_AGE_STATUS (FACEBOOK_ID);



INSERT INTO F9_APP_CYBER_INSIGHT.USER_AGE_STATUS
SELECT ID1 FACEBOOK_ID,LIST_FRIEND,AGE,TOTAL_SIZE,ceil(rand() * 1000) STATUS, 0 DONE  FROM (
SELECT a.ID1,concat(' ',concat(LISTAGG(distinct a.ID2,' '),' ')) LIST_FRIEND,AGE,count(*) TOTAL_SIZE,ROW_NUMBER() OVER (PARTITION BY a.id1 order by count(*) desc) rownumber  FROM F9_APP_INSIGHT.USER_FRIEND a
INNER JOIN F9_APP_INSIGHT.USER_AGE b ON a.ID2 = b.FACEBOOK_ID
WHERE ID1 IN (SELECT FACEBOOK_ID FROM F9_APP_INSIGHT.USER_PROFILE_ALL)
GROUP BY a.ID1,AGE ORDER BY TOTAL_SIZE DESC
) a WHERE rownumber IN (1,2);


DROP TABLE F9_APP_CYBER_INSIGHT.USER_STATUS;
CREATE TABLE "F9_APP_CYBER_INSIGHT"."USER_STATUS"  (
    "FACEBOOK_ID" varchar(15 OCTETS) NOT NULL, 
    "STATUS" INTEGER NOT NULL,
    "DONE" INTEGER NOT NULL
)
   COMPRESS YES STATIC DISTRIBUTE BY HASH("FACEBOOK_ID") IN "USERSPACE1" ORGANIZE BY ROW NOT LOGGED INITIALLY ;
ALTER TABLE "F9_APP_CYBER_INSIGHT"."USER_STATUS" ADD PRIMARY KEY ("FACEBOOK_ID") ENFORCED ;
CREATE INDEX USER_STATUS_STATUS_IDX ON F9_APP_CYBER_INSIGHT.USER_STATUS (STATUS);
CREATE INDEX USER_STATUS_DONE_IDX ON F9_APP_CYBER_INSIGHT.USER_STATUS (DONE);
CREATE INDEX USER_STATUS_FACEBOOK_ID_IDX ON F9_APP_CYBER_INSIGHT.USER_STATUS (FACEBOOK_ID);