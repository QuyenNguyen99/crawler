/*
CREATE TABLE "F9_STG_INSIGHT"."FRIEND_COMPANY"  (
    "FACEBOOK_ID" VARCHAR(15 OCTETS) NOT NULL , 
    "COMPANY_ID" INTEGER NOT NULL, 
    "TOTAL_SIZES" INTEGER, 
    "TOTAL_LINKS" INTEGER)   
   COMPRESS YES STATIC  
   DISTRIBUTE BY HASH("FACEBOOK_ID", "COMPANY_ID")   
     IN "USERSPACE1"  
   ORGANIZE BY ROW  ;
ALTER TABLE "F9_STG_INSIGHT"."FRIEND_COMPANY" ADD PRIMARY KEY ("FACEBOOK_ID", "COMPANY_ID") ENFORCED ;
CREATE INDEX FRIEND_COMPANY_COMPANY_ID_IDX ON F9_STG_INSIGHT.FRIEND_COMPANY (COMPANY_ID);
CREATE INDEX FRIEND_COMPANY_FACEBOOK_ID_IDX ON F9_STG_INSIGHT.FRIEND_COMPANY (FACEBOOK_ID);
CREATE INDEX FRIEND_COMPANY_TOTAL_SIZES_IDX ON F9_STG_INSIGHT.FRIEND_COMPANY (TOTAL_SIZES);
*/

/*
/*
CREATE TABLE "F9_APP_INSIGHT"."USER_COMPANY_ALL"  (
    "FACEBOOK_ID" VARCHAR(15 OCTETS) NOT NULL , 
    "COMPANY_ID" INTEGER NOT NULL, 
    "COMPANY_NAME" VARCHAR(1000 OCTETS), 
    "COMPANY_CITY_ID" INTEGER , 
    "COMPANY_CITY_NAME" VARCHAR(1000 OCTETS), 
    "COMPANY_BLOCK_ID" INTEGER , 
    "COMPANY_BLOCK_NAME" VARCHAR(1000 OCTETS) )   
   COMPRESS YES STATIC  
   DISTRIBUTE BY HASH("FACEBOOK_ID",  
   "COMPANY_ID")   
     IN "USERSPACE1"  
   ORGANIZE BY ROW  ;
ALTER TABLE "F9_APP_INSIGHT"."USER_COMPANY_ALL" 
ADD PRIMARY KEY
  ("FACEBOOK_ID",
   "COMPANY_ID")
ENFORCED ;
CREATE INDEX USER_COMPANY_ALL_COMPANY_ID_ID_IDX ON F9_APP_INSIGHT.USER_COMPANY_ALL (COMPANY_ID);
CREATE INDEX USER_COMPANY_ALL_FACEBOOK_ID_IDX ON F9_APP_INSIGHT.USER_COMPANY_ALL (FACEBOOK_ID);
CREATE INDEX USER_COMPANY_ALL_COMPANY_BLOCK_ID_IDX ON F9_APP_INSIGHT.USER_COMPANY_ALL (COMPANY_BLOCK_ID);
CREATE INDEX USER_COMPANY_ALL_COMPANY_CITY_ID_IDX ON F9_APP_INSIGHT.USER_COMPANY_ALL (COMPANY_CITY_ID);
*/
*/

/*
INSERT INTO F9_APP_INSIGHT.FRIEND_LOCATION(FACEBOOK_ID,LOCATION_ID,TOTAL_SIZES) 
select facebook_id,location_id,total_sizes from (
SELECT c.id1 AS "FACEBOOK_ID",a.location_id AS "LOCATION_ID",count(*) AS "TOTAL_SIZES",ROW_NUMBER() OVER (PARTITION BY c.id1 order by count(*) desc) rownumber FROM F9_APP_INSIGHT.user_location_all a
INNER JOIN F9_APP_INSIGHT.user_friend c ON a.facebook_id = c.id2
INNER JOIN F9_APP_INSIGHT.user_profile p ON c.id1 = p.facebook_id
WHERE c.id1 NOT IN (select facebook_id from F9_APP_INSIGHT.USER_LOCATION_ALL)
GROUP BY c.id1,a.location_id HAVING count(*) > 5 order by total_sizes desc) where rownumber in (1,2); 
*/


/*
INSERT INTO F9_APP_INSIGHT.FRIEND_LOCATION(FACEBOOK_ID,LOCATION_ID,TOTAL_SIZES) 
select facebook_id,LOCATION_ID,TOTAL_SIZES from (
select a.facebook_id,d.LOCATION_ID,count(*) as "TOTAL_SIZES",ROW_NUMBER() OVER (PARTITION BY a.facebook_id order by count(*) desc) rownumber FROM F9_APP_INSIGHT.user_profile a 
INNER JOIN F9_APP_INSIGHT.user_friend c ON a.facebook_id = c.id1
INNER JOIN F9_APP_INSIGHT.user_location_all d ON c.id2 = d.facebook_id
where a.facebook_id not in (select facebook_id from F9_APP_INSIGHT.user_location_all)
group by a.facebook_id,d.LOCATION_ID having count(*) > 5 order by total_sizes desc) where rownumber in (1,2); 
*/




/*
INSERT INTO USER_COMPANY_ALL(FACEBOOK_ID,COMPANY_ID)
SELECT c.id1,'149159' AS "COMPANY_ID"
 FROM F9_APP_INSIGHT.USER_COMPANY_ALL a
INNER JOIN F9_APP_INSIGHT.user_friend c ON a.facebook_id = c.id2
INNER JOIN (
SELECT c.id1,concat(concat(' ',listagg(DISTINCT c.id2,' ')),' ') AS "LIST_IDS",count(*) AS "TOTAL_SIZES"
 FROM F9_APP_INSIGHT.USER_COMPANY_ALL a
INNER JOIN F9_APP_INSIGHT.user_friend c ON a.facebook_id = c.id2
INNER JOIN F9_APP_INSIGHT.user_profile p ON c.id1 = p.facebook_id 
where 
c.id1 not in (select facebook_id from F9_APP_INSIGHT.USER_COMPANY_ALL WHERE company_id = 149159) AND 
a.COMPANY_ID = 149159
GROUP BY c.id1
HAVING count(*) > 5
) p ON c.id1 = p.id1
INNER JOIN F9_APP_INSIGHT.user_friend d ON d.id1 = c.id2 AND p.LIST_IDS LIKE concat(concat('% ',d.id2),' %') 
where a.COMPANY_ID = 149159
GROUP BY c.id1
HAVING count(*) > 5 AND count(*)/(count(DISTINCT c.id2) * 5) >=1
*/